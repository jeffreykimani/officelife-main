{
  "openapi": "3.0.0",
  "info": {
    "title": "REST API Reference",
    "version": "0.6",
    "description": "Uploadcare features a simple yet powerful REST API to manage projects and files. REST API is the lowest level of access to Uploadcare and is implemented into every client.\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
    "contact": {
      "name": "API Support",
      "email": "help@uploadcare.com"
    },
    "x-logo": {
      "url": "https://ucarecdn.com/06bc72fb-3a5a-4ee7-a19c-b1d02fb9e711/logorestapi.svg",
      "backgroundColor": "#fafafa",
      "altText": "Uploadcare REST API Reference"
    },
    "x-meta": {
      "title": "REST API 0.6 Reference — Uploadcare",
      "description": "Complete reference documentation for the Uploadcare REST API 0.6. Covers endpoints, requests, their params, and response examples."
    }
  },
  "servers": [
    {
      "url": "https://api.uploadcare.com",
      "description": "Production Server"
    }
  ],
  "tags": [
    {
      "name": "File"
    },
    {
      "name": "Group"
    },
    {
      "name": "Project"
    },
    {
      "name": "Webhook"
    },
    {
      "name": "Conversion"
    },
    {
      "name": "Other REST API Versions",
      "description": "You can find the complete reference documentation for the REST API 0.5 [here](/api-refs/rest-api/v0.5/).\n"
    },
    {
      "name": "Other APIs",
      "description": "You can find the complete reference documentation for the Upload API [here](/api-refs/upload-api/).\n"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/files/": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "List of files",
        "description": "Getting a paginated list of files.",
        "operationId": "filesList",
        "parameters": [
          {
            "in": "header",
            "name": "accept",
            "schema": {
              "description": "Version header.",
              "example": "application/vnd.uploadcare-v0.6+json"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "removed",
            "description": "`true` to only include removed files in the response, `false` to include existing files. Defaults to `false`.",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "default": "false",
              "example": "true"
            }
          },
          {
            "in": "query",
            "name": "stored",
            "description": "`true` to only include files that were stored, `false` to include temporary ones. The default is unset: both stored and not stored files are returned.",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "example": "true"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "A preferred amount of files in a list for a single response. Defaults to 100, while the maximum is 1000.",
            "schema": {
              "type": "number",
              "maximum": 1000,
              "minimum": 1,
              "example": 100,
              "default": 1000
            }
          },
          {
            "in": "query",
            "name": "ordering",
            "description": "Specifies the way files are sorted in a returned list. `field_name` - ascending order, `-field_name` - descending order.",
            "schema": {
              "type": "string",
              "enum": [
                "datetime_uploaded",
                "-datetime_uploaded",
                "size",
                "-size"
              ],
              "default": "datetime_uploaded",
              "example": "-datetime_uploaded"
            }
          },
          {
            "in": "query",
            "name": "from",
            "description": "A starting point for filtering files. The value depends on your ordering parameter value.",
            "schema": {
              "type": "string"
            },
            "examples": {
              "dateTimeUploaded": {
                "description": "If ordering=datetime_uploaded then a datetime MUST be used, YYYY-MM-DDTHH:MM:SS, where T is used as a separator.",
                "value": "2015-09-10T10:00:00"
              },
              "size": {
                "description": "If ordering=size then an integer file size MUST be used. File sizes SHOULD be set in bytes.:",
                "value": "12909"
              }
            }
          },
          {
            "in": "query",
            "name": "add_fields",
            "description": "Add special fields to the file object, such as: rekognition_info.",
            "schema": {
              "type": "string"
            },
            "example": "rekognition_info"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of files, paginated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "datetime_removed": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "description": "Date and time when a file was removed, if any."
                          },
                          "datetime_stored": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "description": "Date and time of the last store request, if any."
                          },
                          "datetime_uploaded": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date and time when a file was uploaded."
                          },
                          "image_info": {
                            "type": "object",
                            "description": "Image metadata.",
                            "nullable": true,
                            "properties": {
                              "color_mode": {
                                "type": "string",
                                "description": "Image color mode.",
                                "enum": [
                                  "RGB",
                                  "RGBA",
                                  "RGBa",
                                  "RGBX",
                                  "L",
                                  "LA",
                                  "La",
                                  "P",
                                  "PA",
                                  "CMYK",
                                  "YCbCr",
                                  "HSV",
                                  "LAB"
                                ],
                                "example": "RGBA"
                              },
                              "orientation": {
                                "nullable": true,
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 8,
                                "description": "Image orientation from EXIF.",
                                "example": 6
                              },
                              "format": {
                                "type": "string",
                                "description": "Image format.",
                                "example": "JPEG"
                              },
                              "sequence": {
                                "type": "boolean",
                                "default": "Is image if sequence image(GIF for example).",
                                "example": false
                              },
                              "height": {
                                "type": "integer",
                                "description": "Image height in pixels.",
                                "example": 2352
                              },
                              "width": {
                                "type": "integer",
                                "description": "Image width in pixels.",
                                "example": 2935
                              },
                              "geo_location": {
                                "description": "Geo-location of image from EXIF.",
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                  "latitude": {
                                    "type": "float",
                                    "description": "Location latitude.",
                                    "example": -1.1884555555555556
                                  },
                                  "longitude": {
                                    "type": "float",
                                    "description": "Location longitude.",
                                    "example": 52.66996666666667
                                  }
                                }
                              },
                              "datetime_original": {
                                "nullable": true,
                                "type": "string",
                                "description": "Image date and time from EXIF.",
                                "format": "date-time",
                                "example": "2018-09-13T16:23:40.000Z"
                              },
                              "dpi": {
                                "nullable": true,
                                "type": "array",
                                "description": "Image DPI for two dimensions.",
                                "items": {
                                  "type": "float",
                                  "example": 72
                                },
                                "example": [
                                  72,
                                  72
                                ]
                              }
                            }
                          },
                          "is_image": {
                            "type": "boolean",
                            "description": "Is file is image.",
                            "example": true
                          },
                          "is_ready": {
                            "type": "boolean",
                            "description": "Is file is ready to be used after upload.",
                            "example": true
                          },
                          "mime_type": {
                            "type": "string",
                            "description": "File MIME-type.",
                            "example": "image/jpeg"
                          },
                          "original_file_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "Publicly available file CDN URL. Available if a file is not deleted.",
                            "nullable": true
                          },
                          "original_filename": {
                            "type": "string",
                            "description": "Original file name taken from uploaded file.",
                            "example": "EU_4.jpg"
                          },
                          "size": {
                            "type": "integer",
                            "description": "File size in bytes.",
                            "example": 145212
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "API resource URL for a particular file."
                          },
                          "uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "File UUID.",
                            "example": "575ed4e8-f4e8-4c14-a58b-1527b6d9ee46"
                          },
                          "variations": {
                            "type": "object",
                            "nullable": true,
                            "description": "Dictionary of other files that has been created using this file as source. Used for video, document and etc. conversion."
                          },
                          "video_info": {
                            "nullable": true,
                            "type": "object",
                            "description": "Video metadata.",
                            "properties": {
                              "duration": {
                                "type": "number",
                                "description": "Video duration in milliseconds.",
                                "example": 261827
                              },
                              "format": {
                                "type": "string",
                                "description": "Video format (MP4 for example).",
                                "example": "mpeg4"
                              },
                              "bitrate": {
                                "type": "number",
                                "description": "Video bitrate.",
                                "example": 393
                              },
                              "audio": {
                                "type": "object",
                                "description": "Audio stream metadata.",
                                "nullable": true,
                                "properties": {
                                  "bitrate": {
                                    "nullable": true,
                                    "type": "number",
                                    "description": "Audio stream metadata.",
                                    "example": 78
                                  },
                                  "codec": {
                                    "nullable": true,
                                    "type": "string",
                                    "description": "Audio stream codec.",
                                    "example": "aac"
                                  },
                                  "sample_rate": {
                                    "nullable": true,
                                    "type": "number",
                                    "description": "Audio stream sample rate.",
                                    "example": 44100
                                  },
                                  "channels": {
                                    "nullable": true,
                                    "type": "string",
                                    "description": "Audio stream number of channels.",
                                    "example": 2
                                  }
                                }
                              },
                              "video": {
                                "type": "object",
                                "description": "Video stream metadata.",
                                "properties": {
                                  "height": {
                                    "type": "number",
                                    "description": "Video stream image height.",
                                    "example": 360
                                  },
                                  "width": {
                                    "type": "number",
                                    "description": "Video stream image width.",
                                    "example": 640
                                  },
                                  "frame_rate": {
                                    "type": "float",
                                    "description": "Video stream frame rate.",
                                    "example": 25
                                  },
                                  "bitrate": {
                                    "type": "number",
                                    "description": "Video stream bitrate.",
                                    "example": 315
                                  },
                                  "codec": {
                                    "type": "string",
                                    "description": "Video stream codec.",
                                    "example": "h264"
                                  }
                                }
                              }
                            }
                          },
                          "source": {
                            "type": "string",
                            "nullable": true,
                            "description": "File upload source. This field contains information about from where file was uploaded, for example: facebook, gdrive, gphotos, etc."
                          },
                          "rekognition_info": {
                            "type": "object",
                            "nullable": true,
                            "description": "Dictionary of file categories with it\"s confidence.",
                            "additionalProperties": {
                              "type": "number",
                              "minimum": 0,
                              "maximum": 1
                            }
                          }
                        },
                        "example": {
                          "datetime_removed": null,
                          "datetime_stored": "2018-11-26T12:49:10.477888Z",
                          "datetime_uploaded": "2018-11-26T12:49:09.945335Z",
                          "image_info": {
                            "color_mode": "RGB",
                            "orientation": null,
                            "format": "JPEG",
                            "sequence": false,
                            "height": 500,
                            "width": 500,
                            "geo_location": null,
                            "datetime_original": null,
                            "dpi": [
                              144,
                              144
                            ]
                          },
                          "is_image": true,
                          "is_ready": true,
                          "mime_type": "application/octet-stream",
                          "original_file_url": "https://ucarecdn.com/3c269810-c17b-4e2c-92b6-25622464d866/papaya.jpg",
                          "original_filename": "papaya.jpg",
                          "size": 642,
                          "url": "https://api.uploadcare.com/files/3c269810-c17b-4e2c-92b6-25622464d866/",
                          "uuid": "3c269810-c17b-4e2c-92b6-25622464d866",
                          "variations": null,
                          "video_info": null,
                          "source": null,
                          "rekognition_info": {
                            "Art": 0.60401,
                            "Home Decor": 0.719,
                            "Ornament": 0.60401,
                            "Shutter": 0.719,
                            "Arabesque Pattern": 0.60401,
                            "Window": 0.719,
                            "Curtain": 0.719,
                            "Brick": 0.75331,
                            "Window Shade": 0.719,
                            "Balcony": 0.70572
                          }
                        }
                      }
                    },
                    "next": {
                      "type": "string",
                      "format": "uri",
                      "description": "Next page URL.",
                      "nullable": true,
                      "example": "https://api.uploadcare.com/files/?from=2018-11-27T01%3A00%3A24.296613%2B00%3A00&limit=3&offset=0"
                    },
                    "previous": {
                      "type": "string",
                      "format": "uri",
                      "description": "Previous page URL.",
                      "nullable": true,
                      "example": "https://api.uploadcare.com/files/?limit=3&to=2018-11-27T01%3A00%3A36.436838%2B00%3A00&offset=0"
                    },
                    "total": {
                      "type": "number",
                      "minimum": 0,
                      "description": "A total number of objects of the queried type. For files, the queried type depends on the stored and removed query parameters.",
                      "example": 26
                    },
                    "per_page": {
                      "type": "number",
                      "description": "Number of objects per page.",
                      "example": 100
                    }
                  },
                  "example": {
                    "next": "https://api.uploadcare.com/files/?limit=3&from=2018-11-27T01%3A00%3A43.001705%2B00%3A00&offset=0",
                    "previous": "https://api.uploadcare.com/files/?limit=3&to=2018-11-27T01%3A00%3A36.436838%2B00%3A00&offset=0",
                    "total": 2484,
                    "per_page": 2,
                    "results": [
                      {
                        "datetime_removed": null,
                        "datetime_stored": "2018-11-26T12:49:10.477888Z",
                        "datetime_uploaded": "2018-11-26T12:49:09.945335Z",
                        "image_info": {
                          "color_mode": "RGB",
                          "orientation": null,
                          "format": "JPEG",
                          "sequence": false,
                          "height": 500,
                          "width": 500,
                          "geo_location": null,
                          "datetime_original": null,
                          "dpi": [
                            144,
                            144
                          ]
                        },
                        "is_image": true,
                        "is_ready": true,
                        "mime_type": "application/octet-stream",
                        "original_file_url": "https://ucarecdn.com/3c269810-c17b-4e2c-92b6-25622464d866/papaya.jpg",
                        "original_filename": "papaya.jpg",
                        "size": 642,
                        "url": "https://api.uploadcare.com/files/3c269810-c17b-4e2c-92b6-25622464d866/",
                        "uuid": "3c269810-c17b-4e2c-92b6-25622464d866",
                        "variations": null,
                        "video_info": null,
                        "source": null,
                        "rekognition_info": {
                          "Art": 0.60401,
                          "Home Decor": 0.719,
                          "Ornament": 0.60401,
                          "Shutter": 0.719,
                          "Arabesque Pattern": 0.60401,
                          "Window": 0.719,
                          "Curtain": 0.719,
                          "Brick": 0.75331,
                          "Window Shade": 0.719,
                          "Balcony": 0.70572
                        }
                      },
                      {
                        "datetime_removed": null,
                        "datetime_stored": "2018-11-26T12:49:10.477888Z",
                        "datetime_uploaded": "2018-11-26T12:49:09.945335Z",
                        "image_info": {
                          "color_mode": "RGB",
                          "orientation": null,
                          "format": "JPEG",
                          "sequence": false,
                          "height": 500,
                          "width": 500,
                          "geo_location": null,
                          "datetime_original": null,
                          "dpi": [
                            144,
                            144
                          ]
                        },
                        "is_image": true,
                        "is_ready": true,
                        "mime_type": "application/octet-stream",
                        "original_file_url": "https://ucarecdn.com/3c269810-c17b-4e2c-92b6-25622464d866/papaya.jpg",
                        "original_filename": "papaya.jpg",
                        "size": 642,
                        "url": "https://api.uploadcare.com/files/3c269810-c17b-4e2c-92b6-25622464d866/",
                        "uuid": "3c269810-c17b-4e2c-92b6-25622464d866",
                        "variations": null,
                        "video_info": null,
                        "source": null,
                        "rekognition_info": {
                          "Art": 0.60401,
                          "Home Decor": 0.719,
                          "Ornament": 0.60401,
                          "Shutter": 0.719,
                          "Arabesque Pattern": 0.60401,
                          "Window": 0.719,
                          "Curtain": 0.719,
                          "Brick": 0.75331,
                          "Window Shade": 0.719,
                          "Balcony": 0.70572
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
                      "default": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Incorrect authentication credentials.",
                        "Public key {public_key} not found.",
                        "Secret key not found.",
                        "Invalid signature. Please check your secret key."
                      ],
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Invalid version header `Accept` for this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Could not satisfy the request Accept header.",
                      "default": "Could not satisfy the request Accept header."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Request was throttled.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before next request.",
                "schema": {
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Request was throttled. Expected available in 10 second."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files/{uuid}/storage/": {
      "put": {
        "summary": "Store file",
        "description": "Store a single file by UUID.",
        "tags": [
          "File"
        ],
        "operationId": "storeFile",
        "parameters": [
          {
            "in": "header",
            "name": "accept",
            "schema": {
              "description": "Version header.",
              "example": "application/vnd.uploadcare-v0.6+json"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "uuid",
            "description": "File UUID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "21975c81-7f57-4c7a-aef9-acfe28779f78"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File stored. File info in JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "datetime_removed": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "Date and time when a file was removed, if any."
                    },
                    "datetime_stored": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "Date and time of the last store request, if any."
                    },
                    "datetime_uploaded": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when a file was uploaded."
                    },
                    "image_info": {
                      "type": "object",
                      "description": "Image metadata.",
                      "nullable": true,
                      "properties": {
                        "color_mode": {
                          "type": "string",
                          "description": "Image color mode.",
                          "enum": [
                            "RGB",
                            "RGBA",
                            "RGBa",
                            "RGBX",
                            "L",
                            "LA",
                            "La",
                            "P",
                            "PA",
                            "CMYK",
                            "YCbCr",
                            "HSV",
                            "LAB"
                          ],
                          "example": "RGBA"
                        },
                        "orientation": {
                          "nullable": true,
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 8,
                          "description": "Image orientation from EXIF.",
                          "example": 6
                        },
                        "format": {
                          "type": "string",
                          "description": "Image format.",
                          "example": "JPEG"
                        },
                        "sequence": {
                          "type": "boolean",
                          "default": "Is image if sequence image(GIF for example).",
                          "example": false
                        },
                        "height": {
                          "type": "integer",
                          "description": "Image height in pixels.",
                          "example": 2352
                        },
                        "width": {
                          "type": "integer",
                          "description": "Image width in pixels.",
                          "example": 2935
                        },
                        "geo_location": {
                          "description": "Geo-location of image from EXIF.",
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "latitude": {
                              "type": "float",
                              "description": "Location latitude.",
                              "example": -1.1884555555555556
                            },
                            "longitude": {
                              "type": "float",
                              "description": "Location longitude.",
                              "example": 52.66996666666667
                            }
                          }
                        },
                        "datetime_original": {
                          "nullable": true,
                          "type": "string",
                          "description": "Image date and time from EXIF.",
                          "format": "date-time",
                          "example": "2018-09-13T16:23:40.000Z"
                        },
                        "dpi": {
                          "nullable": true,
                          "type": "array",
                          "description": "Image DPI for two dimensions.",
                          "items": {
                            "type": "float",
                            "example": 72
                          },
                          "example": [
                            72,
                            72
                          ]
                        }
                      }
                    },
                    "is_image": {
                      "type": "boolean",
                      "description": "Is file is image.",
                      "example": true
                    },
                    "is_ready": {
                      "type": "boolean",
                      "description": "Is file is ready to be used after upload.",
                      "example": true
                    },
                    "mime_type": {
                      "type": "string",
                      "description": "File MIME-type.",
                      "example": "image/jpeg"
                    },
                    "original_file_url": {
                      "type": "string",
                      "format": "uri",
                      "description": "Publicly available file CDN URL. Available if a file is not deleted.",
                      "nullable": true
                    },
                    "original_filename": {
                      "type": "string",
                      "description": "Original file name taken from uploaded file.",
                      "example": "EU_4.jpg"
                    },
                    "size": {
                      "type": "integer",
                      "description": "File size in bytes.",
                      "example": 145212
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "description": "API resource URL for a particular file."
                    },
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "File UUID.",
                      "example": "575ed4e8-f4e8-4c14-a58b-1527b6d9ee46"
                    },
                    "variations": {
                      "type": "object",
                      "nullable": true,
                      "description": "Dictionary of other files that has been created using this file as source. Used for video, document and etc. conversion."
                    },
                    "video_info": {
                      "nullable": true,
                      "type": "object",
                      "description": "Video metadata.",
                      "properties": {
                        "duration": {
                          "type": "number",
                          "description": "Video duration in milliseconds.",
                          "example": 261827
                        },
                        "format": {
                          "type": "string",
                          "description": "Video format (MP4 for example).",
                          "example": "mpeg4"
                        },
                        "bitrate": {
                          "type": "number",
                          "description": "Video bitrate.",
                          "example": 393
                        },
                        "audio": {
                          "type": "object",
                          "description": "Audio stream metadata.",
                          "nullable": true,
                          "properties": {
                            "bitrate": {
                              "nullable": true,
                              "type": "number",
                              "description": "Audio stream metadata.",
                              "example": 78
                            },
                            "codec": {
                              "nullable": true,
                              "type": "string",
                              "description": "Audio stream codec.",
                              "example": "aac"
                            },
                            "sample_rate": {
                              "nullable": true,
                              "type": "number",
                              "description": "Audio stream sample rate.",
                              "example": 44100
                            },
                            "channels": {
                              "nullable": true,
                              "type": "string",
                              "description": "Audio stream number of channels.",
                              "example": 2
                            }
                          }
                        },
                        "video": {
                          "type": "object",
                          "description": "Video stream metadata.",
                          "properties": {
                            "height": {
                              "type": "number",
                              "description": "Video stream image height.",
                              "example": 360
                            },
                            "width": {
                              "type": "number",
                              "description": "Video stream image width.",
                              "example": 640
                            },
                            "frame_rate": {
                              "type": "float",
                              "description": "Video stream frame rate.",
                              "example": 25
                            },
                            "bitrate": {
                              "type": "number",
                              "description": "Video stream bitrate.",
                              "example": 315
                            },
                            "codec": {
                              "type": "string",
                              "description": "Video stream codec.",
                              "example": "h264"
                            }
                          }
                        }
                      }
                    },
                    "source": {
                      "type": "string",
                      "nullable": true,
                      "description": "File upload source. This field contains information about from where file was uploaded, for example: facebook, gdrive, gphotos, etc."
                    },
                    "rekognition_info": {
                      "type": "object",
                      "nullable": true,
                      "description": "Dictionary of file categories with it\"s confidence.",
                      "additionalProperties": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1
                      }
                    }
                  },
                  "example": {
                    "datetime_removed": null,
                    "datetime_stored": "2018-11-26T12:49:10.477888Z",
                    "datetime_uploaded": "2018-11-26T12:49:09.945335Z",
                    "image_info": {
                      "color_mode": "RGB",
                      "orientation": null,
                      "format": "JPEG",
                      "sequence": false,
                      "height": 500,
                      "width": 500,
                      "geo_location": null,
                      "datetime_original": null,
                      "dpi": [
                        144,
                        144
                      ]
                    },
                    "is_image": true,
                    "is_ready": true,
                    "mime_type": "application/octet-stream",
                    "original_file_url": "https://ucarecdn.com/3c269810-c17b-4e2c-92b6-25622464d866/papaya.jpg",
                    "original_filename": "papaya.jpg",
                    "size": 642,
                    "url": "https://api.uploadcare.com/files/3c269810-c17b-4e2c-92b6-25622464d866/",
                    "uuid": "3c269810-c17b-4e2c-92b6-25622464d866",
                    "variations": null,
                    "video_info": null,
                    "source": null,
                    "rekognition_info": {
                      "Art": 0.60401,
                      "Home Decor": 0.719,
                      "Ornament": 0.60401,
                      "Shutter": 0.719,
                      "Arabesque Pattern": 0.60401,
                      "Window": 0.719,
                      "Curtain": 0.719,
                      "Brick": 0.75331,
                      "Window Shade": 0.719,
                      "Balcony": 0.70572
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
                      "default": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Incorrect authentication credentials.",
                        "Public key {public_key} not found.",
                        "Secret key not found.",
                        "Invalid signature. Please check your secret key."
                      ],
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "File not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Not found.",
                      "example": "Not found."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Invalid version header `Accept` for this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Could not satisfy the request Accept header.",
                      "default": "Could not satisfy the request Accept header."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Request was throttled.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before next request.",
                "schema": {
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Request was throttled. Expected available in 10 second."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete file",
        "tags": [
          "File"
        ],
        "description": "Remove individual files. Redirects to `/files/<uuid>/`.",
        "operationId": "deleteFileStorage",
        "parameters": [
          {
            "in": "header",
            "name": "accept",
            "schema": {
              "description": "Version header.",
              "example": "application/vnd.uploadcare-v0.6+json"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "uuid",
            "description": "File UUID.",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "21975c81-7f57-4c7a-aef9-acfe28779f78"
            },
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "File deleted. Response is a redirect to `/files/<uuid>/`."
          },
          "400": {
            "description": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
                      "default": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Incorrect authentication credentials.",
                        "Public key {public_key} not found.",
                        "Secret key not found.",
                        "Invalid signature. Please check your secret key."
                      ],
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "File not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Not found.",
                      "example": "Not found."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Invalid version header `Accept` for this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Could not satisfy the request Accept header.",
                      "default": "Could not satisfy the request Accept header."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Request was throttled.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before next request.",
                "schema": {
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Request was throttled. Expected available in 10 second."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files/{uuid}/": {
      "delete": {
        "summary": "Delete file (alternative)",
        "tags": [
          "File"
        ],
        "description": "Remove individual files. Returns file info.",
        "operationId": "deleteFile",
        "parameters": [
          {
            "in": "header",
            "name": "accept",
            "schema": {
              "description": "Version header.",
              "example": "application/vnd.uploadcare-v0.6+json"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "uuid",
            "description": "File UUID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "03ccf9ab-f266-43fb-973d-a6529c55c2ae"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File info in JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "datetime_removed": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "Date and time when a file was removed, if any."
                    },
                    "datetime_stored": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "Date and time of the last store request, if any."
                    },
                    "datetime_uploaded": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when a file was uploaded."
                    },
                    "image_info": {
                      "type": "object",
                      "description": "Image metadata.",
                      "nullable": true,
                      "properties": {
                        "color_mode": {
                          "type": "string",
                          "description": "Image color mode.",
                          "enum": [
                            "RGB",
                            "RGBA",
                            "RGBa",
                            "RGBX",
                            "L",
                            "LA",
                            "La",
                            "P",
                            "PA",
                            "CMYK",
                            "YCbCr",
                            "HSV",
                            "LAB"
                          ],
                          "example": "RGBA"
                        },
                        "orientation": {
                          "nullable": true,
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 8,
                          "description": "Image orientation from EXIF.",
                          "example": 6
                        },
                        "format": {
                          "type": "string",
                          "description": "Image format.",
                          "example": "JPEG"
                        },
                        "sequence": {
                          "type": "boolean",
                          "default": "Is image if sequence image(GIF for example).",
                          "example": false
                        },
                        "height": {
                          "type": "integer",
                          "description": "Image height in pixels.",
                          "example": 2352
                        },
                        "width": {
                          "type": "integer",
                          "description": "Image width in pixels.",
                          "example": 2935
                        },
                        "geo_location": {
                          "description": "Geo-location of image from EXIF.",
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "latitude": {
                              "type": "float",
                              "description": "Location latitude.",
                              "example": -1.1884555555555556
                            },
                            "longitude": {
                              "type": "float",
                              "description": "Location longitude.",
                              "example": 52.66996666666667
                            }
                          }
                        },
                        "datetime_original": {
                          "nullable": true,
                          "type": "string",
                          "description": "Image date and time from EXIF.",
                          "format": "date-time",
                          "example": "2018-09-13T16:23:40.000Z"
                        },
                        "dpi": {
                          "nullable": true,
                          "type": "array",
                          "description": "Image DPI for two dimensions.",
                          "items": {
                            "type": "float",
                            "example": 72
                          },
                          "example": [
                            72,
                            72
                          ]
                        }
                      }
                    },
                    "is_image": {
                      "type": "boolean",
                      "description": "Is file is image.",
                      "example": true
                    },
                    "is_ready": {
                      "type": "boolean",
                      "description": "Is file is ready to be used after upload.",
                      "example": true
                    },
                    "mime_type": {
                      "type": "string",
                      "description": "File MIME-type.",
                      "example": "image/jpeg"
                    },
                    "original_file_url": {
                      "type": "string",
                      "format": "uri",
                      "description": "Publicly available file CDN URL. Available if a file is not deleted.",
                      "nullable": true
                    },
                    "original_filename": {
                      "type": "string",
                      "description": "Original file name taken from uploaded file.",
                      "example": "EU_4.jpg"
                    },
                    "size": {
                      "type": "integer",
                      "description": "File size in bytes.",
                      "example": 145212
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "description": "API resource URL for a particular file."
                    },
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "File UUID.",
                      "example": "575ed4e8-f4e8-4c14-a58b-1527b6d9ee46"
                    },
                    "variations": {
                      "type": "object",
                      "nullable": true,
                      "description": "Dictionary of other files that has been created using this file as source. Used for video, document and etc. conversion."
                    },
                    "video_info": {
                      "nullable": true,
                      "type": "object",
                      "description": "Video metadata.",
                      "properties": {
                        "duration": {
                          "type": "number",
                          "description": "Video duration in milliseconds.",
                          "example": 261827
                        },
                        "format": {
                          "type": "string",
                          "description": "Video format (MP4 for example).",
                          "example": "mpeg4"
                        },
                        "bitrate": {
                          "type": "number",
                          "description": "Video bitrate.",
                          "example": 393
                        },
                        "audio": {
                          "type": "object",
                          "description": "Audio stream metadata.",
                          "nullable": true,
                          "properties": {
                            "bitrate": {
                              "nullable": true,
                              "type": "number",
                              "description": "Audio stream metadata.",
                              "example": 78
                            },
                            "codec": {
                              "nullable": true,
                              "type": "string",
                              "description": "Audio stream codec.",
                              "example": "aac"
                            },
                            "sample_rate": {
                              "nullable": true,
                              "type": "number",
                              "description": "Audio stream sample rate.",
                              "example": 44100
                            },
                            "channels": {
                              "nullable": true,
                              "type": "string",
                              "description": "Audio stream number of channels.",
                              "example": 2
                            }
                          }
                        },
                        "video": {
                          "type": "object",
                          "description": "Video stream metadata.",
                          "properties": {
                            "height": {
                              "type": "number",
                              "description": "Video stream image height.",
                              "example": 360
                            },
                            "width": {
                              "type": "number",
                              "description": "Video stream image width.",
                              "example": 640
                            },
                            "frame_rate": {
                              "type": "float",
                              "description": "Video stream frame rate.",
                              "example": 25
                            },
                            "bitrate": {
                              "type": "number",
                              "description": "Video stream bitrate.",
                              "example": 315
                            },
                            "codec": {
                              "type": "string",
                              "description": "Video stream codec.",
                              "example": "h264"
                            }
                          }
                        }
                      }
                    },
                    "source": {
                      "type": "string",
                      "nullable": true,
                      "description": "File upload source. This field contains information about from where file was uploaded, for example: facebook, gdrive, gphotos, etc."
                    },
                    "rekognition_info": {
                      "type": "object",
                      "nullable": true,
                      "description": "Dictionary of file categories with it\"s confidence.",
                      "additionalProperties": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1
                      }
                    }
                  },
                  "example": {
                    "datetime_removed": null,
                    "datetime_stored": "2018-11-26T12:49:10.477888Z",
                    "datetime_uploaded": "2018-11-26T12:49:09.945335Z",
                    "image_info": {
                      "color_mode": "RGB",
                      "orientation": null,
                      "format": "JPEG",
                      "sequence": false,
                      "height": 500,
                      "width": 500,
                      "geo_location": null,
                      "datetime_original": null,
                      "dpi": [
                        144,
                        144
                      ]
                    },
                    "is_image": true,
                    "is_ready": true,
                    "mime_type": "application/octet-stream",
                    "original_file_url": "https://ucarecdn.com/3c269810-c17b-4e2c-92b6-25622464d866/papaya.jpg",
                    "original_filename": "papaya.jpg",
                    "size": 642,
                    "url": "https://api.uploadcare.com/files/3c269810-c17b-4e2c-92b6-25622464d866/",
                    "uuid": "3c269810-c17b-4e2c-92b6-25622464d866",
                    "variations": null,
                    "video_info": null,
                    "source": null,
                    "rekognition_info": {
                      "Art": 0.60401,
                      "Home Decor": 0.719,
                      "Ornament": 0.60401,
                      "Shutter": 0.719,
                      "Arabesque Pattern": 0.60401,
                      "Window": 0.719,
                      "Curtain": 0.719,
                      "Brick": 0.75331,
                      "Window Shade": 0.719,
                      "Balcony": 0.70572
                    }
                  }
                },
                "example": {
                  "datetime_removed": "2018-11-26T12:49:11.477888Z",
                  "datetime_stored": null,
                  "datetime_uploaded": "2018-11-26T12:49:09.945335Z",
                  "image_info": {
                    "color_mode": "RGB",
                    "orientation": null,
                    "format": "JPEG",
                    "sequence": false,
                    "height": 500,
                    "width": 500,
                    "geo_location": null,
                    "datetime_original": null,
                    "dpi": [
                      144,
                      144
                    ]
                  },
                  "is_image": true,
                  "is_ready": true,
                  "mime_type": "application/octet-stream",
                  "original_file_url": "https://ucarecdn.com/3c269810-c17b-4e2c-92b6-25622464d866/papaya.jpg",
                  "original_filename": "papaya.jpg",
                  "size": 642,
                  "url": "https://api.uploadcare.com/files/3c269810-c17b-4e2c-92b6-25622464d866/",
                  "uuid": "3c269810-c17b-4e2c-92b6-25622464d866",
                  "variations": null,
                  "video_info": null,
                  "source": null,
                  "rekognition_info": {
                    "Art": 0.60401,
                    "Home Decor": 0.719,
                    "Ornament": 0.60401,
                    "Shutter": 0.719,
                    "Arabesque Pattern": 0.60401,
                    "Window": 0.719,
                    "Curtain": 0.719,
                    "Brick": 0.75331,
                    "Window Shade": 0.719,
                    "Balcony": 0.70572
                  }
                }
              }
            }
          },
          "400": {
            "description": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
                      "default": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Incorrect authentication credentials.",
                        "Public key {public_key} not found.",
                        "Secret key not found.",
                        "Invalid signature. Please check your secret key."
                      ],
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "File not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Not found.",
                      "example": "Not found."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Invalid version header `Accept` for this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Could not satisfy the request Accept header.",
                      "default": "Could not satisfy the request Accept header."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Request was throttled.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before next request.",
                "schema": {
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Request was throttled. Expected available in 10 second."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "File info",
        "tags": [
          "File"
        ],
        "description": "Once you obtain a list of files, you might want to acquire some file-specific info.",
        "operationId": "fileInfo",
        "parameters": [
          {
            "in": "header",
            "name": "accept",
            "schema": {
              "description": "Version header.",
              "example": "application/vnd.uploadcare-v0.6+json"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "uuid",
            "description": "File UUID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "03ccf9ab-f266-43fb-973d-a6529c55c2ae"
            }
          },
          {
            "in": "query",
            "name": "add_fields",
            "description": "Add special fields to the file object, such as: rekognition_info.",
            "schema": {
              "type": "string"
            },
            "example": "rekognition_info"
          }
        ],
        "responses": {
          "200": {
            "description": "File info in JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "datetime_removed": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "Date and time when a file was removed, if any."
                    },
                    "datetime_stored": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "Date and time of the last store request, if any."
                    },
                    "datetime_uploaded": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when a file was uploaded."
                    },
                    "image_info": {
                      "type": "object",
                      "description": "Image metadata.",
                      "nullable": true,
                      "properties": {
                        "color_mode": {
                          "type": "string",
                          "description": "Image color mode.",
                          "enum": [
                            "RGB",
                            "RGBA",
                            "RGBa",
                            "RGBX",
                            "L",
                            "LA",
                            "La",
                            "P",
                            "PA",
                            "CMYK",
                            "YCbCr",
                            "HSV",
                            "LAB"
                          ],
                          "example": "RGBA"
                        },
                        "orientation": {
                          "nullable": true,
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 8,
                          "description": "Image orientation from EXIF.",
                          "example": 6
                        },
                        "format": {
                          "type": "string",
                          "description": "Image format.",
                          "example": "JPEG"
                        },
                        "sequence": {
                          "type": "boolean",
                          "default": "Is image if sequence image(GIF for example).",
                          "example": false
                        },
                        "height": {
                          "type": "integer",
                          "description": "Image height in pixels.",
                          "example": 2352
                        },
                        "width": {
                          "type": "integer",
                          "description": "Image width in pixels.",
                          "example": 2935
                        },
                        "geo_location": {
                          "description": "Geo-location of image from EXIF.",
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "latitude": {
                              "type": "float",
                              "description": "Location latitude.",
                              "example": -1.1884555555555556
                            },
                            "longitude": {
                              "type": "float",
                              "description": "Location longitude.",
                              "example": 52.66996666666667
                            }
                          }
                        },
                        "datetime_original": {
                          "nullable": true,
                          "type": "string",
                          "description": "Image date and time from EXIF.",
                          "format": "date-time",
                          "example": "2018-09-13T16:23:40.000Z"
                        },
                        "dpi": {
                          "nullable": true,
                          "type": "array",
                          "description": "Image DPI for two dimensions.",
                          "items": {
                            "type": "float",
                            "example": 72
                          },
                          "example": [
                            72,
                            72
                          ]
                        }
                      }
                    },
                    "is_image": {
                      "type": "boolean",
                      "description": "Is file is image.",
                      "example": true
                    },
                    "is_ready": {
                      "type": "boolean",
                      "description": "Is file is ready to be used after upload.",
                      "example": true
                    },
                    "mime_type": {
                      "type": "string",
                      "description": "File MIME-type.",
                      "example": "image/jpeg"
                    },
                    "original_file_url": {
                      "type": "string",
                      "format": "uri",
                      "description": "Publicly available file CDN URL. Available if a file is not deleted.",
                      "nullable": true
                    },
                    "original_filename": {
                      "type": "string",
                      "description": "Original file name taken from uploaded file.",
                      "example": "EU_4.jpg"
                    },
                    "size": {
                      "type": "integer",
                      "description": "File size in bytes.",
                      "example": 145212
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "description": "API resource URL for a particular file."
                    },
                    "uuid": {
                      "type": "string",
                      "format": "uuid",
                      "description": "File UUID.",
                      "example": "575ed4e8-f4e8-4c14-a58b-1527b6d9ee46"
                    },
                    "variations": {
                      "type": "object",
                      "nullable": true,
                      "description": "Dictionary of other files that has been created using this file as source. Used for video, document and etc. conversion."
                    },
                    "video_info": {
                      "nullable": true,
                      "type": "object",
                      "description": "Video metadata.",
                      "properties": {
                        "duration": {
                          "type": "number",
                          "description": "Video duration in milliseconds.",
                          "example": 261827
                        },
                        "format": {
                          "type": "string",
                          "description": "Video format (MP4 for example).",
                          "example": "mpeg4"
                        },
                        "bitrate": {
                          "type": "number",
                          "description": "Video bitrate.",
                          "example": 393
                        },
                        "audio": {
                          "type": "object",
                          "description": "Audio stream metadata.",
                          "nullable": true,
                          "properties": {
                            "bitrate": {
                              "nullable": true,
                              "type": "number",
                              "description": "Audio stream metadata.",
                              "example": 78
                            },
                            "codec": {
                              "nullable": true,
                              "type": "string",
                              "description": "Audio stream codec.",
                              "example": "aac"
                            },
                            "sample_rate": {
                              "nullable": true,
                              "type": "number",
                              "description": "Audio stream sample rate.",
                              "example": 44100
                            },
                            "channels": {
                              "nullable": true,
                              "type": "string",
                              "description": "Audio stream number of channels.",
                              "example": 2
                            }
                          }
                        },
                        "video": {
                          "type": "object",
                          "description": "Video stream metadata.",
                          "properties": {
                            "height": {
                              "type": "number",
                              "description": "Video stream image height.",
                              "example": 360
                            },
                            "width": {
                              "type": "number",
                              "description": "Video stream image width.",
                              "example": 640
                            },
                            "frame_rate": {
                              "type": "float",
                              "description": "Video stream frame rate.",
                              "example": 25
                            },
                            "bitrate": {
                              "type": "number",
                              "description": "Video stream bitrate.",
                              "example": 315
                            },
                            "codec": {
                              "type": "string",
                              "description": "Video stream codec.",
                              "example": "h264"
                            }
                          }
                        }
                      }
                    },
                    "source": {
                      "type": "string",
                      "nullable": true,
                      "description": "File upload source. This field contains information about from where file was uploaded, for example: facebook, gdrive, gphotos, etc."
                    },
                    "rekognition_info": {
                      "type": "object",
                      "nullable": true,
                      "description": "Dictionary of file categories with it\"s confidence.",
                      "additionalProperties": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1
                      }
                    }
                  },
                  "example": {
                    "datetime_removed": null,
                    "datetime_stored": "2018-11-26T12:49:10.477888Z",
                    "datetime_uploaded": "2018-11-26T12:49:09.945335Z",
                    "image_info": {
                      "color_mode": "RGB",
                      "orientation": null,
                      "format": "JPEG",
                      "sequence": false,
                      "height": 500,
                      "width": 500,
                      "geo_location": null,
                      "datetime_original": null,
                      "dpi": [
                        144,
                        144
                      ]
                    },
                    "is_image": true,
                    "is_ready": true,
                    "mime_type": "application/octet-stream",
                    "original_file_url": "https://ucarecdn.com/3c269810-c17b-4e2c-92b6-25622464d866/papaya.jpg",
                    "original_filename": "papaya.jpg",
                    "size": 642,
                    "url": "https://api.uploadcare.com/files/3c269810-c17b-4e2c-92b6-25622464d866/",
                    "uuid": "3c269810-c17b-4e2c-92b6-25622464d866",
                    "variations": null,
                    "video_info": null,
                    "source": null,
                    "rekognition_info": {
                      "Art": 0.60401,
                      "Home Decor": 0.719,
                      "Ornament": 0.60401,
                      "Shutter": 0.719,
                      "Arabesque Pattern": 0.60401,
                      "Window": 0.719,
                      "Curtain": 0.719,
                      "Brick": 0.75331,
                      "Window Shade": 0.719,
                      "Balcony": 0.70572
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
                      "default": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Incorrect authentication credentials.",
                        "Public key {public_key} not found.",
                        "Secret key not found.",
                        "Invalid signature. Please check your secret key."
                      ],
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "File not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Not found.",
                      "example": "Not found."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Invalid version header `Accept` for this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Could not satisfy the request Accept header.",
                      "default": "Could not satisfy the request Accept header."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Request was throttled.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before next request.",
                "schema": {
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Request was throttled. Expected available in 10 second."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files/storage/": {
      "put": {
        "summary": "Batch file storing",
        "description": "Used to store multiple files in one go. Up to 100 files are supported per request. A JSON object holding your File list SHOULD be put into a request body.",
        "operationId": "filesStoring",
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "accept",
            "schema": {
              "description": "Version header.",
              "example": "application/vnd.uploadcare-v0.6+json"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid",
                  "description": "List of files UUIDs to store."
                },
                "example": [
                  "21975c81-7f57-4c7a-aef9-acfe28779f78",
                  "cbaf2d73-5169-4b2b-a543-496cf2813dff"
                ]
              },
              "example": [
                "21975c81-7f57-4c7a-aef9-acfe28779f78",
                "cbaf2d73-5169-4b2b-a543-496cf2813dff"
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK. See `problems` and `result` fields in the response. In case file list provided in a request holds invalid UUIDs, they will be included in the problems structure. Invalid UUIDs can be incomplete, associated with files that no longer exist, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "problems": {
                      "type": "object",
                      "description": "Dictionary of passed files UUIDs and problems associated with these UUIDs.",
                      "example": {
                        "21975c81-7f57-4c7a-aef9-acfe28779f78": "Missing in the project",
                        "4j334o01-8bs3": "Invalid"
                      }
                    },
                    "result": {
                      "description": "List of file objects that has been deleted.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "datetime_removed": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "description": "Date and time when a file was removed, if any."
                          },
                          "datetime_stored": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "description": "Date and time of the last store request, if any."
                          },
                          "datetime_uploaded": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date and time when a file was uploaded."
                          },
                          "image_info": {
                            "type": "object",
                            "description": "Image metadata.",
                            "nullable": true,
                            "properties": {
                              "color_mode": {
                                "type": "string",
                                "description": "Image color mode.",
                                "enum": [
                                  "RGB",
                                  "RGBA",
                                  "RGBa",
                                  "RGBX",
                                  "L",
                                  "LA",
                                  "La",
                                  "P",
                                  "PA",
                                  "CMYK",
                                  "YCbCr",
                                  "HSV",
                                  "LAB"
                                ],
                                "example": "RGBA"
                              },
                              "orientation": {
                                "nullable": true,
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 8,
                                "description": "Image orientation from EXIF.",
                                "example": 6
                              },
                              "format": {
                                "type": "string",
                                "description": "Image format.",
                                "example": "JPEG"
                              },
                              "sequence": {
                                "type": "boolean",
                                "default": "Is image if sequence image(GIF for example).",
                                "example": false
                              },
                              "height": {
                                "type": "integer",
                                "description": "Image height in pixels.",
                                "example": 2352
                              },
                              "width": {
                                "type": "integer",
                                "description": "Image width in pixels.",
                                "example": 2935
                              },
                              "geo_location": {
                                "description": "Geo-location of image from EXIF.",
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                  "latitude": {
                                    "type": "float",
                                    "description": "Location latitude.",
                                    "example": -1.1884555555555556
                                  },
                                  "longitude": {
                                    "type": "float",
                                    "description": "Location longitude.",
                                    "example": 52.66996666666667
                                  }
                                }
                              },
                              "datetime_original": {
                                "nullable": true,
                                "type": "string",
                                "description": "Image date and time from EXIF.",
                                "format": "date-time",
                                "example": "2018-09-13T16:23:40.000Z"
                              },
                              "dpi": {
                                "nullable": true,
                                "type": "array",
                                "description": "Image DPI for two dimensions.",
                                "items": {
                                  "type": "float",
                                  "example": 72
                                },
                                "example": [
                                  72,
                                  72
                                ]
                              }
                            }
                          },
                          "is_image": {
                            "type": "boolean",
                            "description": "Is file is image.",
                            "example": true
                          },
                          "is_ready": {
                            "type": "boolean",
                            "description": "Is file is ready to be used after upload.",
                            "example": true
                          },
                          "mime_type": {
                            "type": "string",
                            "description": "File MIME-type.",
                            "example": "image/jpeg"
                          },
                          "original_file_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "Publicly available file CDN URL. Available if a file is not deleted.",
                            "nullable": true
                          },
                          "original_filename": {
                            "type": "string",
                            "description": "Original file name taken from uploaded file.",
                            "example": "EU_4.jpg"
                          },
                          "size": {
                            "type": "integer",
                            "description": "File size in bytes.",
                            "example": 145212
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "API resource URL for a particular file."
                          },
                          "uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "File UUID.",
                            "example": "575ed4e8-f4e8-4c14-a58b-1527b6d9ee46"
                          },
                          "variations": {
                            "type": "object",
                            "nullable": true,
                            "description": "Dictionary of other files that has been created using this file as source. Used for video, document and etc. conversion."
                          },
                          "video_info": {
                            "nullable": true,
                            "type": "object",
                            "description": "Video metadata.",
                            "properties": {
                              "duration": {
                                "type": "number",
                                "description": "Video duration in milliseconds.",
                                "example": 261827
                              },
                              "format": {
                                "type": "string",
                                "description": "Video format (MP4 for example).",
                                "example": "mpeg4"
                              },
                              "bitrate": {
                                "type": "number",
                                "description": "Video bitrate.",
                                "example": 393
                              },
                              "audio": {
                                "type": "object",
                                "description": "Audio stream metadata.",
                                "nullable": true,
                                "properties": {
                                  "bitrate": {
                                    "nullable": true,
                                    "type": "number",
                                    "description": "Audio stream metadata.",
                                    "example": 78
                                  },
                                  "codec": {
                                    "nullable": true,
                                    "type": "string",
                                    "description": "Audio stream codec.",
                                    "example": "aac"
                                  },
                                  "sample_rate": {
                                    "nullable": true,
                                    "type": "number",
                                    "description": "Audio stream sample rate.",
                                    "example": 44100
                                  },
                                  "channels": {
                                    "nullable": true,
                                    "type": "string",
                                    "description": "Audio stream number of channels.",
                                    "example": 2
                                  }
                                }
                              },
                              "video": {
                                "type": "object",
                                "description": "Video stream metadata.",
                                "properties": {
                                  "height": {
                                    "type": "number",
                                    "description": "Video stream image height.",
                                    "example": 360
                                  },
                                  "width": {
                                    "type": "number",
                                    "description": "Video stream image width.",
                                    "example": 640
                                  },
                                  "frame_rate": {
                                    "type": "float",
                                    "description": "Video stream frame rate.",
                                    "example": 25
                                  },
                                  "bitrate": {
                                    "type": "number",
                                    "description": "Video stream bitrate.",
                                    "example": 315
                                  },
                                  "codec": {
                                    "type": "string",
                                    "description": "Video stream codec.",
                                    "example": "h264"
                                  }
                                }
                              }
                            }
                          },
                          "source": {
                            "type": "string",
                            "nullable": true,
                            "description": "File upload source. This field contains information about from where file was uploaded, for example: facebook, gdrive, gphotos, etc."
                          },
                          "rekognition_info": {
                            "type": "object",
                            "nullable": true,
                            "description": "Dictionary of file categories with it\"s confidence.",
                            "additionalProperties": {
                              "type": "number",
                              "minimum": 0,
                              "maximum": 1
                            }
                          }
                        },
                        "example": {
                          "datetime_removed": null,
                          "datetime_stored": "2018-11-26T12:49:10.477888Z",
                          "datetime_uploaded": "2018-11-26T12:49:09.945335Z",
                          "image_info": {
                            "color_mode": "RGB",
                            "orientation": null,
                            "format": "JPEG",
                            "sequence": false,
                            "height": 500,
                            "width": 500,
                            "geo_location": null,
                            "datetime_original": null,
                            "dpi": [
                              144,
                              144
                            ]
                          },
                          "is_image": true,
                          "is_ready": true,
                          "mime_type": "application/octet-stream",
                          "original_file_url": "https://ucarecdn.com/3c269810-c17b-4e2c-92b6-25622464d866/papaya.jpg",
                          "original_filename": "papaya.jpg",
                          "size": 642,
                          "url": "https://api.uploadcare.com/files/3c269810-c17b-4e2c-92b6-25622464d866/",
                          "uuid": "3c269810-c17b-4e2c-92b6-25622464d866",
                          "variations": null,
                          "video_info": null,
                          "source": null,
                          "rekognition_info": {
                            "Art": 0.60401,
                            "Home Decor": 0.719,
                            "Ornament": 0.60401,
                            "Shutter": 0.719,
                            "Arabesque Pattern": 0.60401,
                            "Window": 0.719,
                            "Curtain": 0.719,
                            "Brick": 0.75331,
                            "Window Shade": 0.719,
                            "Balcony": 0.70572
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "status": "ok",
                    "problems": {
                      "21975c81-7f57-4c7a-aef9-acfe28779f78": "Missing in the project",
                      "4j334o01-8bs3": "Invalid"
                    },
                    "result": [
                      {
                        "datetime_removed": null,
                        "datetime_stored": "2018-11-29T07:14:45.908017Z",
                        "datetime_uploaded": "2018-11-29T07:14:45.738895Z",
                        "image_info": {
                          "color_mode": "RGB",
                          "orientation": null,
                          "format": "JPEG",
                          "sequence": false,
                          "height": 5,
                          "width": 5,
                          "geo_location": null,
                          "datetime_original": null,
                          "dpi": null
                        },
                        "is_image": true,
                        "is_ready": true,
                        "mime_type": "application/octet-stream",
                        "original_file_url": "https://ucarecdn.com/d9f640b1-cf94-41b7-be91-62f4b550d881/papaya.jpg",
                        "original_filename": "papaya.jpg",
                        "size": 642,
                        "url": "https://api.uploadcare.com/files/d9f640b1-cf94-41b7-be91-62f4b550d881/",
                        "uuid": "d9f640b1-cf94-41b7-be91-62f4b550d881",
                        "source": null
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Files UUIDs list validation errors.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    },
                    {
                      "type": "object",
                      "description": "Files UUIDs list validation errors.",
                      "properties": {
                        "detail": {
                          "type": "string",
                          "enum": [
                            "Expected list of UUIDs",
                            "List of UUIDs can not be empty",
                            "Maximum UUIDs per request is exceeded. The limit is 100"
                          ],
                          "example": "Expected list of UUIDs"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authorization errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Incorrect authentication credentials.",
                        "Public key {public_key} not found.",
                        "Secret key not found.",
                        "Invalid signature. Please check your secret key."
                      ],
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Invalid version header `Accept` for this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Could not satisfy the request Accept header.",
                      "default": "Could not satisfy the request Accept header."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Request was throttled.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before next request.",
                "schema": {
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Request was throttled. Expected available in 10 second."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Batch file delete",
        "description": "Used to delete multiple files in one go. Up to 100 files are supported per request. A JSON object holding your File list SHOULD be put into a request body.",
        "operationId": "filesDelete",
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "accept",
            "schema": {
              "description": "Version header.",
              "example": "application/vnd.uploadcare-v0.6+json"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid",
                  "description": "List of files UUIDs to store."
                },
                "example": [
                  "21975c81-7f57-4c7a-aef9-acfe28779f78",
                  "cbaf2d73-5169-4b2b-a543-496cf2813dff"
                ]
              },
              "example": [
                "21975c81-7f57-4c7a-aef9-acfe28779f78",
                "cbaf2d73-5169-4b2b-a543-496cf2813dff"
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK. See `problems` and `result` fields in the response. In case file list provided in a request holds invalid UUIDs, they will be included in the problems structure. Invalid UUIDs can be incomplete, associated with files that no longer exist, etc.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "problems": {
                      "type": "object",
                      "description": "Dictionary of passed files UUIDs and problems associated with these UUIDs.",
                      "example": {
                        "21975c81-7f57-4c7a-aef9-acfe28779f78": "Missing in the project",
                        "4j334o01-8bs3": "Invalid"
                      }
                    },
                    "result": {
                      "description": "List of file objects that has been deleted.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "datetime_removed": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "description": "Date and time when a file was removed, if any."
                          },
                          "datetime_stored": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "description": "Date and time of the last store request, if any."
                          },
                          "datetime_uploaded": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date and time when a file was uploaded."
                          },
                          "image_info": {
                            "type": "object",
                            "description": "Image metadata.",
                            "nullable": true,
                            "properties": {
                              "color_mode": {
                                "type": "string",
                                "description": "Image color mode.",
                                "enum": [
                                  "RGB",
                                  "RGBA",
                                  "RGBa",
                                  "RGBX",
                                  "L",
                                  "LA",
                                  "La",
                                  "P",
                                  "PA",
                                  "CMYK",
                                  "YCbCr",
                                  "HSV",
                                  "LAB"
                                ],
                                "example": "RGBA"
                              },
                              "orientation": {
                                "nullable": true,
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 8,
                                "description": "Image orientation from EXIF.",
                                "example": 6
                              },
                              "format": {
                                "type": "string",
                                "description": "Image format.",
                                "example": "JPEG"
                              },
                              "sequence": {
                                "type": "boolean",
                                "default": "Is image if sequence image(GIF for example).",
                                "example": false
                              },
                              "height": {
                                "type": "integer",
                                "description": "Image height in pixels.",
                                "example": 2352
                              },
                              "width": {
                                "type": "integer",
                                "description": "Image width in pixels.",
                                "example": 2935
                              },
                              "geo_location": {
                                "description": "Geo-location of image from EXIF.",
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                  "latitude": {
                                    "type": "float",
                                    "description": "Location latitude.",
                                    "example": -1.1884555555555556
                                  },
                                  "longitude": {
                                    "type": "float",
                                    "description": "Location longitude.",
                                    "example": 52.66996666666667
                                  }
                                }
                              },
                              "datetime_original": {
                                "nullable": true,
                                "type": "string",
                                "description": "Image date and time from EXIF.",
                                "format": "date-time",
                                "example": "2018-09-13T16:23:40.000Z"
                              },
                              "dpi": {
                                "nullable": true,
                                "type": "array",
                                "description": "Image DPI for two dimensions.",
                                "items": {
                                  "type": "float",
                                  "example": 72
                                },
                                "example": [
                                  72,
                                  72
                                ]
                              }
                            }
                          },
                          "is_image": {
                            "type": "boolean",
                            "description": "Is file is image.",
                            "example": true
                          },
                          "is_ready": {
                            "type": "boolean",
                            "description": "Is file is ready to be used after upload.",
                            "example": true
                          },
                          "mime_type": {
                            "type": "string",
                            "description": "File MIME-type.",
                            "example": "image/jpeg"
                          },
                          "original_file_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "Publicly available file CDN URL. Available if a file is not deleted.",
                            "nullable": true
                          },
                          "original_filename": {
                            "type": "string",
                            "description": "Original file name taken from uploaded file.",
                            "example": "EU_4.jpg"
                          },
                          "size": {
                            "type": "integer",
                            "description": "File size in bytes.",
                            "example": 145212
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "API resource URL for a particular file."
                          },
                          "uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "File UUID.",
                            "example": "575ed4e8-f4e8-4c14-a58b-1527b6d9ee46"
                          },
                          "variations": {
                            "type": "object",
                            "nullable": true,
                            "description": "Dictionary of other files that has been created using this file as source. Used for video, document and etc. conversion."
                          },
                          "video_info": {
                            "nullable": true,
                            "type": "object",
                            "description": "Video metadata.",
                            "properties": {
                              "duration": {
                                "type": "number",
                                "description": "Video duration in milliseconds.",
                                "example": 261827
                              },
                              "format": {
                                "type": "string",
                                "description": "Video format (MP4 for example).",
                                "example": "mpeg4"
                              },
                              "bitrate": {
                                "type": "number",
                                "description": "Video bitrate.",
                                "example": 393
                              },
                              "audio": {
                                "type": "object",
                                "description": "Audio stream metadata.",
                                "nullable": true,
                                "properties": {
                                  "bitrate": {
                                    "nullable": true,
                                    "type": "number",
                                    "description": "Audio stream metadata.",
                                    "example": 78
                                  },
                                  "codec": {
                                    "nullable": true,
                                    "type": "string",
                                    "description": "Audio stream codec.",
                                    "example": "aac"
                                  },
                                  "sample_rate": {
                                    "nullable": true,
                                    "type": "number",
                                    "description": "Audio stream sample rate.",
                                    "example": 44100
                                  },
                                  "channels": {
                                    "nullable": true,
                                    "type": "string",
                                    "description": "Audio stream number of channels.",
                                    "example": 2
                                  }
                                }
                              },
                              "video": {
                                "type": "object",
                                "description": "Video stream metadata.",
                                "properties": {
                                  "height": {
                                    "type": "number",
                                    "description": "Video stream image height.",
                                    "example": 360
                                  },
                                  "width": {
                                    "type": "number",
                                    "description": "Video stream image width.",
                                    "example": 640
                                  },
                                  "frame_rate": {
                                    "type": "float",
                                    "description": "Video stream frame rate.",
                                    "example": 25
                                  },
                                  "bitrate": {
                                    "type": "number",
                                    "description": "Video stream bitrate.",
                                    "example": 315
                                  },
                                  "codec": {
                                    "type": "string",
                                    "description": "Video stream codec.",
                                    "example": "h264"
                                  }
                                }
                              }
                            }
                          },
                          "source": {
                            "type": "string",
                            "nullable": true,
                            "description": "File upload source. This field contains information about from where file was uploaded, for example: facebook, gdrive, gphotos, etc."
                          },
                          "rekognition_info": {
                            "type": "object",
                            "nullable": true,
                            "description": "Dictionary of file categories with it\"s confidence.",
                            "additionalProperties": {
                              "type": "number",
                              "minimum": 0,
                              "maximum": 1
                            }
                          }
                        },
                        "example": {
                          "datetime_removed": null,
                          "datetime_stored": "2018-11-26T12:49:10.477888Z",
                          "datetime_uploaded": "2018-11-26T12:49:09.945335Z",
                          "image_info": {
                            "color_mode": "RGB",
                            "orientation": null,
                            "format": "JPEG",
                            "sequence": false,
                            "height": 500,
                            "width": 500,
                            "geo_location": null,
                            "datetime_original": null,
                            "dpi": [
                              144,
                              144
                            ]
                          },
                          "is_image": true,
                          "is_ready": true,
                          "mime_type": "application/octet-stream",
                          "original_file_url": "https://ucarecdn.com/3c269810-c17b-4e2c-92b6-25622464d866/papaya.jpg",
                          "original_filename": "papaya.jpg",
                          "size": 642,
                          "url": "https://api.uploadcare.com/files/3c269810-c17b-4e2c-92b6-25622464d866/",
                          "uuid": "3c269810-c17b-4e2c-92b6-25622464d866",
                          "variations": null,
                          "video_info": null,
                          "source": null,
                          "rekognition_info": {
                            "Art": 0.60401,
                            "Home Decor": 0.719,
                            "Ornament": 0.60401,
                            "Shutter": 0.719,
                            "Arabesque Pattern": 0.60401,
                            "Window": 0.719,
                            "Curtain": 0.719,
                            "Brick": 0.75331,
                            "Window Shade": 0.719,
                            "Balcony": 0.70572
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "status": "ok",
                    "problems": {
                      "21975c81-7f57-4c7a-aef9-acfe28779f78": "Missing in the project",
                      "4j334o01-8bs3": "Invalid"
                    },
                    "result": [
                      {
                        "datetime_removed": null,
                        "datetime_stored": "2018-11-29T07:14:45.908017Z",
                        "datetime_uploaded": "2018-11-29T07:14:45.738895Z",
                        "image_info": {
                          "color_mode": "RGB",
                          "orientation": null,
                          "format": "JPEG",
                          "sequence": false,
                          "height": 5,
                          "width": 5,
                          "geo_location": null,
                          "datetime_original": null,
                          "dpi": null
                        },
                        "is_image": true,
                        "is_ready": true,
                        "mime_type": "application/octet-stream",
                        "original_file_url": "https://ucarecdn.com/d9f640b1-cf94-41b7-be91-62f4b550d881/papaya.jpg",
                        "original_filename": "papaya.jpg",
                        "size": 642,
                        "url": "https://api.uploadcare.com/files/d9f640b1-cf94-41b7-be91-62f4b550d881/",
                        "uuid": "d9f640b1-cf94-41b7-be91-62f4b550d881",
                        "source": null
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Files UUIDs list validation errors.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    },
                    {
                      "type": "object",
                      "description": "Files UUIDs list validation errors.",
                      "properties": {
                        "detail": {
                          "type": "string",
                          "enum": [
                            "Expected list of UUIDs",
                            "List of UUIDs can not be empty",
                            "Maximum UUIDs per request is exceeded. The limit is 100"
                          ],
                          "example": "Expected list of UUIDs"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authorization errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Incorrect authentication credentials.",
                        "Public key {public_key} not found.",
                        "Secret key not found.",
                        "Invalid signature. Please check your secret key."
                      ],
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Invalid version header `Accept` for this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Could not satisfy the request Accept header.",
                      "default": "Could not satisfy the request Accept header."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Request was throttled.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before next request.",
                "schema": {
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Request was throttled. Expected available in 10 second."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files/local_copy/": {
      "post": {
        "summary": "Copy file to local storage",
        "description": "POST requests are used to copy original files or their modified versions to default storage. Source files MAY either be stored or just uploaded and MUST NOT be deleted.",
        "tags": [
          "File"
        ],
        "operationId": "copyFileLocal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "source"
                ],
                "type": "object",
                "properties": {
                  "source": {
                    "description": "A CDN URL or just UUID of a file subjected to copy.",
                    "type": "string",
                    "format": "uri",
                    "example": {
                      "uuid": {
                        "value": "85b5644f-e692-4855-9db0-8c5a83096e25"
                      },
                      "cdn": {
                        "value": "http://www.ucarecdn.com/85b5644f-e692-4855-9db0-8c5a83096e25/-/resize/200x/roof.jpg"
                      }
                    }
                  },
                  "store": {
                    "description": "The parameter only applies to the Uploadcare storage and MUST be either true or false.",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "default": "false",
                    "example": "true"
                  }
                }
              },
              "example": {
                "source": "03ccf9ab-f266-43fb-973d-a6529c55c2ae",
                "store": "true"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "accept",
            "schema": {
              "description": "Version header.",
              "example": "application/vnd.uploadcare-v0.6+json"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "POST requests return a JSON dictionary containing the type and result fields. For the url type, the result is a URL with the s3 scheme. Your bucket name is put as a host, and an s3 object path follows.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "default": "file",
                      "example": "file"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "datetime_removed": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "description": "Date and time when a file was removed, if any."
                        },
                        "datetime_stored": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "description": "Date and time of the last store request, if any."
                        },
                        "datetime_uploaded": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date and time when a file was uploaded."
                        },
                        "image_info": {
                          "type": "object",
                          "description": "Image metadata.",
                          "nullable": true,
                          "properties": {
                            "color_mode": {
                              "type": "string",
                              "description": "Image color mode.",
                              "enum": [
                                "RGB",
                                "RGBA",
                                "RGBa",
                                "RGBX",
                                "L",
                                "LA",
                                "La",
                                "P",
                                "PA",
                                "CMYK",
                                "YCbCr",
                                "HSV",
                                "LAB"
                              ],
                              "example": "RGBA"
                            },
                            "orientation": {
                              "nullable": true,
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 8,
                              "description": "Image orientation from EXIF.",
                              "example": 6
                            },
                            "format": {
                              "type": "string",
                              "description": "Image format.",
                              "example": "JPEG"
                            },
                            "sequence": {
                              "type": "boolean",
                              "default": "Is image if sequence image(GIF for example).",
                              "example": false
                            },
                            "height": {
                              "type": "integer",
                              "description": "Image height in pixels.",
                              "example": 2352
                            },
                            "width": {
                              "type": "integer",
                              "description": "Image width in pixels.",
                              "example": 2935
                            },
                            "geo_location": {
                              "description": "Geo-location of image from EXIF.",
                              "type": "object",
                              "nullable": true,
                              "properties": {
                                "latitude": {
                                  "type": "float",
                                  "description": "Location latitude.",
                                  "example": -1.1884555555555556
                                },
                                "longitude": {
                                  "type": "float",
                                  "description": "Location longitude.",
                                  "example": 52.66996666666667
                                }
                              }
                            },
                            "datetime_original": {
                              "nullable": true,
                              "type": "string",
                              "description": "Image date and time from EXIF.",
                              "format": "date-time",
                              "example": "2018-09-13T16:23:40.000Z"
                            },
                            "dpi": {
                              "nullable": true,
                              "type": "array",
                              "description": "Image DPI for two dimensions.",
                              "items": {
                                "type": "float",
                                "example": 72
                              },
                              "example": [
                                72,
                                72
                              ]
                            }
                          }
                        },
                        "is_image": {
                          "type": "boolean",
                          "description": "Is file is image.",
                          "example": true
                        },
                        "is_ready": {
                          "type": "boolean",
                          "description": "Is file is ready to be used after upload.",
                          "example": true
                        },
                        "mime_type": {
                          "type": "string",
                          "description": "File MIME-type.",
                          "example": "image/jpeg"
                        },
                        "original_file_url": {
                          "type": "string",
                          "format": "uri",
                          "description": "Publicly available file CDN URL. Available if a file is not deleted.",
                          "nullable": true
                        },
                        "original_filename": {
                          "type": "string",
                          "description": "Original file name taken from uploaded file.",
                          "example": "EU_4.jpg"
                        },
                        "size": {
                          "type": "integer",
                          "description": "File size in bytes.",
                          "example": 145212
                        },
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "description": "API resource URL for a particular file."
                        },
                        "uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "File UUID.",
                          "example": "575ed4e8-f4e8-4c14-a58b-1527b6d9ee46"
                        },
                        "variations": {
                          "type": "object",
                          "nullable": true,
                          "description": "Dictionary of other files that has been created using this file as source. Used for video, document and etc. conversion."
                        },
                        "video_info": {
                          "nullable": true,
                          "type": "object",
                          "description": "Video metadata.",
                          "properties": {
                            "duration": {
                              "type": "number",
                              "description": "Video duration in milliseconds.",
                              "example": 261827
                            },
                            "format": {
                              "type": "string",
                              "description": "Video format (MP4 for example).",
                              "example": "mpeg4"
                            },
                            "bitrate": {
                              "type": "number",
                              "description": "Video bitrate.",
                              "example": 393
                            },
                            "audio": {
                              "type": "object",
                              "description": "Audio stream metadata.",
                              "nullable": true,
                              "properties": {
                                "bitrate": {
                                  "nullable": true,
                                  "type": "number",
                                  "description": "Audio stream metadata.",
                                  "example": 78
                                },
                                "codec": {
                                  "nullable": true,
                                  "type": "string",
                                  "description": "Audio stream codec.",
                                  "example": "aac"
                                },
                                "sample_rate": {
                                  "nullable": true,
                                  "type": "number",
                                  "description": "Audio stream sample rate.",
                                  "example": 44100
                                },
                                "channels": {
                                  "nullable": true,
                                  "type": "string",
                                  "description": "Audio stream number of channels.",
                                  "example": 2
                                }
                              }
                            },
                            "video": {
                              "type": "object",
                              "description": "Video stream metadata.",
                              "properties": {
                                "height": {
                                  "type": "number",
                                  "description": "Video stream image height.",
                                  "example": 360
                                },
                                "width": {
                                  "type": "number",
                                  "description": "Video stream image width.",
                                  "example": 640
                                },
                                "frame_rate": {
                                  "type": "float",
                                  "description": "Video stream frame rate.",
                                  "example": 25
                                },
                                "bitrate": {
                                  "type": "number",
                                  "description": "Video stream bitrate.",
                                  "example": 315
                                },
                                "codec": {
                                  "type": "string",
                                  "description": "Video stream codec.",
                                  "example": "h264"
                                }
                              }
                            }
                          }
                        },
                        "source": {
                          "type": "string",
                          "nullable": true,
                          "description": "File upload source. This field contains information about from where file was uploaded, for example: facebook, gdrive, gphotos, etc."
                        },
                        "rekognition_info": {
                          "type": "object",
                          "nullable": true,
                          "description": "Dictionary of file categories with it\"s confidence.",
                          "additionalProperties": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                          }
                        }
                      },
                      "example": {
                        "datetime_removed": null,
                        "datetime_stored": "2018-11-26T12:49:10.477888Z",
                        "datetime_uploaded": "2018-11-26T12:49:09.945335Z",
                        "image_info": {
                          "color_mode": "RGB",
                          "orientation": null,
                          "format": "JPEG",
                          "sequence": false,
                          "height": 500,
                          "width": 500,
                          "geo_location": null,
                          "datetime_original": null,
                          "dpi": [
                            144,
                            144
                          ]
                        },
                        "is_image": true,
                        "is_ready": true,
                        "mime_type": "application/octet-stream",
                        "original_file_url": "https://ucarecdn.com/3c269810-c17b-4e2c-92b6-25622464d866/papaya.jpg",
                        "original_filename": "papaya.jpg",
                        "size": 642,
                        "url": "https://api.uploadcare.com/files/3c269810-c17b-4e2c-92b6-25622464d866/",
                        "uuid": "3c269810-c17b-4e2c-92b6-25622464d866",
                        "variations": null,
                        "video_info": null,
                        "source": null,
                        "rekognition_info": {
                          "Art": 0.60401,
                          "Home Decor": 0.719,
                          "Ornament": 0.60401,
                          "Shutter": 0.719,
                          "Arabesque Pattern": 0.60401,
                          "Window": 0.719,
                          "Curtain": 0.719,
                          "Brick": 0.75331,
                          "Window Shade": 0.719,
                          "Balcony": 0.70572
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Possible errors for file copy endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Bad `source` parameter. Use UUID or CDN URL.",
                        "`source` parameter is required.",
                        "Project has no storage with provided name.",
                        "`store` parameter should be `true` or `false`.",
                        "Invalid pattern provided: `pattern_value`",
                        "Invalid pattern provided: Invalid character in a pattern.",
                        "File is not ready yet.",
                        "Copying of large files is not supported at the moment.",
                        "Not allowed on your current plan."
                      ],
                      "example": "File is not ready yet."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Incorrect authentication credentials.",
                        "Public key {public_key} not found.",
                        "Secret key not found.",
                        "Invalid signature. Please check your secret key."
                      ],
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Invalid version header `Accept` for this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Could not satisfy the request Accept header.",
                      "default": "Could not satisfy the request Accept header."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Request was throttled.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before next request.",
                "schema": {
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Request was throttled. Expected available in 10 second."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/files/remote_copy/": {
      "post": {
        "summary": "Copy file to remote storage",
        "description": "POST requests are used to copy original files or their modified versions to a custom storage. Source files MAY either be stored or just uploaded and MUST NOT be deleted.",
        "tags": [
          "File"
        ],
        "operationId": "copyFile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "source",
                  "target"
                ],
                "type": "object",
                "properties": {
                  "source": {
                    "description": "A CDN URL or just UUID of a file subjected to copy.",
                    "type": "string",
                    "format": "uri",
                    "example": {
                      "uuid": {
                        "value": "85b5644f-e692-4855-9db0-8c5a83096e25"
                      },
                      "cdn": {
                        "value": "http://www.ucarecdn.com/85b5644f-e692-4855-9db0-8c5a83096e25/-/resize/200x/roof.jpg"
                      }
                    }
                  },
                  "target": {
                    "description": "Identifies a custom storage name related to your project. Implies you are copying a file to a specified custom storage. Keep in mind you can have multiple storages associated with a single S3 bucket.",
                    "type": "string",
                    "example": "mytarget"
                  },
                  "make_public": {
                    "description": "MUST be either true or false. true to make copied files available via public links, false to reverse the behavior.",
                    "type": "string",
                    "enum": [
                      "true",
                      "false"
                    ],
                    "default": "true",
                    "example": "true"
                  },
                  "pattern": {
                    "description": "The parameter is used to specify file names Uploadcare passes to a custom storage. In case the parameter is omitted, we use pattern of your custom storage. Use any combination of allowed values.",
                    "type": "string",
                    "default": "${default}",
                    "enum": [
                      "${default}",
                      "${auto_filename}",
                      "${effects}",
                      "${filename}",
                      "${uuid}",
                      "${ext}"
                    ],
                    "example": "${uuid}.${ext}"
                  }
                }
              },
              "example": {
                "source": "03ccf9ab-f266-43fb-973d-a6529c55c2ae",
                "target": "mytarget"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "accept",
            "schema": {
              "description": "Version header.",
              "example": "application/vnd.uploadcare-v0.6+json"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Destination file with that name already exists. Check `pattern` parameter. This code is used only for remote copy.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "See `201` code for information about response."
                }
              }
            }
          },
          "201": {
            "description": "POST requests return a JSON dictionary containing the type and result fields. For the url type, the result is a URL with the s3 scheme. Your bucket name is put as a host, and an s3 object path follows.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "default": "file",
                      "example": "file"
                    },
                    "result": {
                      "type": "string",
                      "format": "url",
                      "description": " For the url type, the result is a URL with the s3 scheme. Your bucket name is put as a host, and an s3 object path follows.",
                      "example": "s3://mybucket/03ccf9ab-f266-43fb-973d-a6529c55c2ae/image.png"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Simple auth. on HTTP or file copy errors.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "description": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    },
                    {
                      "description": "Possible errors for file copy endpoint."
                    }
                  ]
                },
                "examples": {
                  "auth-errors": {
                    "value": {
                      "detail": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    }
                  },
                  "copy-error": {
                    "value": {
                      "detail": "Bad `source` parameter. Use UUID or CDN URL."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Incorrect authentication credentials.",
                        "Public key {public_key} not found.",
                        "Secret key not found.",
                        "Invalid signature. Please check your secret key."
                      ],
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Invalid version header `Accept` for this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Could not satisfy the request Accept header.",
                      "default": "Could not satisfy the request Accept header."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Request was throttled.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before next request.",
                "schema": {
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Request was throttled. Expected available in 10 second."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/groups/": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "List of groups",
        "description": "Get a paginated list of groups.",
        "operationId": "groupsList",
        "parameters": [
          {
            "in": "header",
            "name": "accept",
            "schema": {
              "description": "Version header.",
              "example": "application/vnd.uploadcare-v0.6+json"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "limit",
            "description": "A preferred amount of groups in a list for a single response. Defaults to 100, while the maximum is 1000.",
            "schema": {
              "type": "number",
              "example": 150
            }
          },
          {
            "in": "query",
            "name": "from",
            "description": "A starting point for filtering group lists. MUST be a datetime value with T used as a separator.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2015-01-02T10:00:00"
            }
          },
          {
            "in": "query",
            "name": "ordering",
            "description": "Specifies the way groups are sorted in a returned list by creation time. `datetime_created` for ascending order, `-datetime_created` for descending order.",
            "schema": {
              "enum": [
                "datetime_created",
                "-datetime_created"
              ],
              "default": "datetime_created",
              "example": "-datetime_created"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of groups, paginated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Group identifier."
                          },
                          "datetime_created": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date and time when a group was created."
                          },
                          "datetime_stored": {
                            "nullable": true,
                            "type": "string",
                            "format": "date-time",
                            "description": "Date and time when files in a group were stored."
                          },
                          "files_count": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Number of files in a group."
                          },
                          "cdn_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "Public CDN URL for a group."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "API resource URL for a group."
                          }
                        },
                        "example": {
                          "id": "dd43982b-5447-44b2-86f6-1c3b52afa0ff~53",
                          "datetime_created": "2018-07-25T14:14:37.583654Z",
                          "datetime_stored": null,
                          "files_count": 53,
                          "cdn_url": "https://ucarecdn.com/dd43982b-5447-44b2-86f6-1c3b52afa0ff~53/",
                          "url": "https://api.uploadcare.com/groups/dd43982b-5447-44b2-86f6-1c3b52afa0ff~53/"
                        }
                      }
                    },
                    "next": {
                      "type": "string",
                      "format": "uri",
                      "description": "Next page URL.",
                      "nullable": true,
                      "example": "https://api.uploadcare.com/files/?from=2018-11-27T01%3A00%3A24.296613%2B00%3A00&limit=3&offset=0"
                    },
                    "previous": {
                      "type": "string",
                      "format": "uri",
                      "description": "Previous page URL.",
                      "nullable": true,
                      "example": "https://api.uploadcare.com/files/?limit=3&to=2018-11-27T01%3A00%3A36.436838%2B00%3A00&offset=0"
                    },
                    "total": {
                      "type": "number",
                      "minimum": 0,
                      "description": "A total number of objects of the queried type. For files, the queried type depends on the stored and removed query parameters.",
                      "example": 26
                    },
                    "per_page": {
                      "type": "number",
                      "description": "Number of objects per page.",
                      "example": 100
                    }
                  },
                  "example": {
                    "next": "https://api.uploadcare.com/groups/?from=2016-11-09T14%3A30%3A22.421889%2B00%3A00&limit=3&offset=0",
                    "previous": null,
                    "total": 399307,
                    "per_page": 2,
                    "results": [
                      {
                        "id": "dd43982b-5447-44b2-86f6-1c3b52afa0ff~53",
                        "datetime_created": "2018-07-25T14:14:37.583654Z",
                        "datetime_stored": null,
                        "files_count": 53,
                        "cdn_url": "https://ucarecdn.com/dd43982b-5447-44b2-86f6-1c3b52afa0ff~53/",
                        "url": "https://api.uploadcare.com/groups/dd43982b-5447-44b2-86f6-1c3b52afa0ff~53/"
                      },
                      {
                        "id": "dd43982b-5447-44b2-86f6-1c3b52afa0ff~53",
                        "datetime_created": "2018-07-25T14:14:37.583654Z",
                        "datetime_stored": null,
                        "files_count": 53,
                        "cdn_url": "https://ucarecdn.com/dd43982b-5447-44b2-86f6-1c3b52afa0ff~53/",
                        "url": "https://api.uploadcare.com/groups/dd43982b-5447-44b2-86f6-1c3b52afa0ff~53/"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
                      "default": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Incorrect authentication credentials.",
                        "Public key {public_key} not found.",
                        "Secret key not found.",
                        "Invalid signature. Please check your secret key."
                      ],
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Invalid version header `Accept` for this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Could not satisfy the request Accept header.",
                      "default": "Could not satisfy the request Accept header."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Request was throttled.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before next request.",
                "schema": {
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Request was throttled. Expected available in 10 second."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/groups/{uuid}/": {
      "get": {
        "summary": "Group info",
        "description": "Get a file group by UUID.",
        "operationId": "groupInfo",
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "accept",
            "schema": {
              "description": "Version header.",
              "example": "application/vnd.uploadcare-v0.6+json"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "uuid",
            "description": "Group UUID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "badfc9f7-f88f-4921-9cc0-22e2c08aa2da~12"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "JSON of requested group info.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Group identifier."
                    },
                    "datetime_created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when a group was created."
                    },
                    "datetime_stored": {
                      "nullable": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when files in a group were stored."
                    },
                    "files_count": {
                      "type": "integer",
                      "minimum": 1,
                      "description": "Number of files in a group."
                    },
                    "cdn_url": {
                      "type": "string",
                      "format": "uri",
                      "description": "Public CDN URL for a group."
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "description": "API resource URL for a group."
                    }
                  },
                  "example": {
                    "id": "dd43982b-5447-44b2-86f6-1c3b52afa0ff~53",
                    "datetime_created": "2018-07-25T14:14:37.583654Z",
                    "datetime_stored": null,
                    "files_count": 53,
                    "cdn_url": "https://ucarecdn.com/dd43982b-5447-44b2-86f6-1c3b52afa0ff~53/",
                    "url": "https://api.uploadcare.com/groups/dd43982b-5447-44b2-86f6-1c3b52afa0ff~53/"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
                      "default": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Incorrect authentication credentials.",
                        "Public key {public_key} not found.",
                        "Secret key not found.",
                        "Invalid signature. Please check your secret key."
                      ],
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Group with `uuid` not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Group not found.",
                      "example": "Not found."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Invalid version header `Accept` for this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Could not satisfy the request Accept header.",
                      "default": "Could not satisfy the request Accept header."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Request was throttled.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before next request.",
                "schema": {
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Request was throttled. Expected available in 10 second."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/groups/<uuid>/storage/": {
      "put": {
        "summary": "Store group",
        "description": "Mark all files in a group as stored.",
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "accept",
            "schema": {
              "description": "Version header.",
              "example": "application/vnd.uploadcare-v0.6+json"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "uuid",
            "description": "Group UUID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "badfc9f7-f88f-4921-9cc0-22e2c08aa2da~12"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group successfully stored.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "A list of groups, paginated.",
                  "example": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "results": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Group identifier."
                                },
                                "datetime_created": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Date and time when a group was created."
                                },
                                "datetime_stored": {
                                  "nullable": true,
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Date and time when files in a group were stored."
                                },
                                "files_count": {
                                  "type": "integer",
                                  "minimum": 1,
                                  "description": "Number of files in a group."
                                },
                                "cdn_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "Public CDN URL for a group."
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "API resource URL for a group."
                                }
                              },
                              "example": {
                                "id": "dd43982b-5447-44b2-86f6-1c3b52afa0ff~53",
                                "datetime_created": "2018-07-25T14:14:37.583654Z",
                                "datetime_stored": null,
                                "files_count": 53,
                                "cdn_url": "https://ucarecdn.com/dd43982b-5447-44b2-86f6-1c3b52afa0ff~53/",
                                "url": "https://api.uploadcare.com/groups/dd43982b-5447-44b2-86f6-1c3b52afa0ff~53/"
                              }
                            }
                          },
                          "next": {
                            "type": "string",
                            "format": "uri",
                            "description": "Next page URL.",
                            "nullable": true,
                            "example": "https://api.uploadcare.com/files/?from=2018-11-27T01%3A00%3A24.296613%2B00%3A00&limit=3&offset=0"
                          },
                          "previous": {
                            "type": "string",
                            "format": "uri",
                            "description": "Previous page URL.",
                            "nullable": true,
                            "example": "https://api.uploadcare.com/files/?limit=3&to=2018-11-27T01%3A00%3A36.436838%2B00%3A00&offset=0"
                          },
                          "total": {
                            "type": "number",
                            "minimum": 0,
                            "description": "A total number of objects of the queried type. For files, the queried type depends on the stored and removed query parameters.",
                            "example": 26
                          },
                          "per_page": {
                            "type": "number",
                            "description": "Number of objects per page.",
                            "example": 100
                          }
                        },
                        "example": {
                          "next": "https://api.uploadcare.com/groups/?from=2016-11-09T14%3A30%3A22.421889%2B00%3A00&limit=3&offset=0",
                          "previous": null,
                          "total": 399307,
                          "per_page": 2,
                          "results": [
                            {
                              "id": "dd43982b-5447-44b2-86f6-1c3b52afa0ff~53",
                              "datetime_created": "2018-07-25T14:14:37.583654Z",
                              "datetime_stored": null,
                              "files_count": 53,
                              "cdn_url": "https://ucarecdn.com/dd43982b-5447-44b2-86f6-1c3b52afa0ff~53/",
                              "url": "https://api.uploadcare.com/groups/dd43982b-5447-44b2-86f6-1c3b52afa0ff~53/"
                            },
                            {
                              "id": "dd43982b-5447-44b2-86f6-1c3b52afa0ff~53",
                              "datetime_created": "2018-07-25T14:14:37.583654Z",
                              "datetime_stored": null,
                              "files_count": 53,
                              "cdn_url": "https://ucarecdn.com/dd43982b-5447-44b2-86f6-1c3b52afa0ff~53/",
                              "url": "https://api.uploadcare.com/groups/dd43982b-5447-44b2-86f6-1c3b52afa0ff~53/"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
                      "default": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Incorrect authentication credentials.",
                        "Public key {public_key} not found.",
                        "Secret key not found.",
                        "Invalid signature. Please check your secret key."
                      ],
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Group with `uuid` not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Group not found.",
                      "example": "Not found."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Invalid version header `Accept` for this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Could not satisfy the request Accept header.",
                      "default": "Could not satisfy the request Accept header."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Request was throttled.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before next request.",
                "schema": {
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Request was throttled. Expected available in 10 second."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/project/": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Project info",
        "description": "Getting info about account project.",
        "operationId": "projectInfo",
        "parameters": [
          {
            "in": "header",
            "name": "Accept",
            "schema": {
              "description": "Version header.",
              "example": "application/vnd.uploadcare-v0.6+json"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Your project details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Project login name."
                    },
                    "pub_key": {
                      "type": "string",
                      "description": "Project public key."
                    },
                    "collaborators": {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "format": "email",
                            "description": "Collaborator email."
                          },
                          "name": {
                            "type": "string",
                            "description": "Collaborator name."
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "collaborators": [],
                    "name": "demo",
                    "pub_key": "demopublickey",
                    "autostore_enabled": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
                      "default": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Incorrect authentication credentials.",
                        "Public key {public_key} not found.",
                        "Secret key not found.",
                        "Invalid signature. Please check your secret key."
                      ],
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Invalid version header `Accept` for this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Could not satisfy the request Accept header.",
                      "default": "Could not satisfy the request Accept header."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Request was throttled.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before next request.",
                "schema": {
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Request was throttled. Expected available in 10 second."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/": {
      "get": {
        "summary": "List of webhooks",
        "description": "List of project webhooks.",
        "tags": [
          "Webhook"
        ],
        "operationId": "webhooksList",
        "parameters": [
          {
            "in": "header",
            "name": "accept",
            "schema": {
              "description": "Version header.",
              "example": "application/vnd.uploadcare-v0.6+json"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of project webhooks.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "description": "Webhook.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number",
                        "description": "Webhook ID.",
                        "example": 1234
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Webhook creation date-time.",
                        "example": "2018-11-26T12:49:10.477888Z"
                      },
                      "updated": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Webhook update date-time.",
                        "example": "2018-11-26T12:49:10.477888Z"
                      },
                      "event": {
                        "type": "string",
                        "description": "Webhook event.",
                        "example": "file.uploaded"
                      },
                      "target_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "Where webhook data will be posted.",
                        "example": "https://example.com"
                      },
                      "project": {
                        "type": "number",
                        "format": "date-time",
                        "description": "Webhook project ID.",
                        "example": 39123
                      },
                      "is_active": {
                        "type": "boolean",
                        "example": true
                      }
                    },
                    "example": {
                      "id": 1,
                      "created": "2016-04-27T11:49:54.948615Z",
                      "updated": "2016-04-27T12:04:57.819933Z",
                      "event": "file.uploaded",
                      "target_url": "http://sometargeturl.com/hooks/receiver",
                      "project": 13,
                      "is_active": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Simple auth. on HTTP or webhooks permission errors.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    },
                    {
                      "description": "Webhooks are not available for your subscription plan."
                    }
                  ]
                },
                "examples": {
                  "auth-errors": {
                    "value": {
                      "detail": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    }
                  },
                  "premission-error": {
                    "value": {
                      "detail": "You can\"t use webhooks"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Incorrect authentication credentials.",
                        "Public key {public_key} not found.",
                        "Secret key not found.",
                        "Invalid signature. Please check your secret key."
                      ],
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Invalid version header `Accept` for this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Could not satisfy the request Accept header.",
                      "default": "Could not satisfy the request Accept header."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Request was throttled.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before next request.",
                "schema": {
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Request was throttled. Expected available in 10 second."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/create/": {
      "post": {
        "summary": "Create webhook",
        "description": "Create and subscribe to webhook. See [an example notification](https://uploadcare.com/docs/api_reference/rest/webhooks/#payload?utm_source=api-ref&utm_campaign=rest-webhooks#create) that is sent on the `file.uploaded` event.",
        "operationId": "webhookCreate",
        "parameters": [
          {
            "in": "header",
            "name": "accept",
            "schema": {
              "description": "Version header.",
              "example": "application/vnd.uploadcare-v0.6+json"
            },
            "required": true
          }
        ],
        "tags": [
          "Webhook"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "target_url",
                  "event"
                ],
                "type": "object",
                "properties": {
                  "target_url": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://sometargeturl.com/hooks/receiver",
                    "description": "A URL that is triggered by an event, for example, a file upload. A target URL MUST be unique for each `project` — `event type` combination."
                  },
                  "event": {
                    "type": "string",
                    "example": "file.uploaded",
                    "description": "An event you subscribe to. Presently, we only support the `file.uploaded` event."
                  },
                  "is_active": {
                    "type": "boolean",
                    "description": "Marks a subscription as either active or not, defaults to `true`, otherwise `false`."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Webhook successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Webhook.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "Webhook ID.",
                      "example": 1234
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Webhook creation date-time.",
                      "example": "2018-11-26T12:49:10.477888Z"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Webhook update date-time.",
                      "example": "2018-11-26T12:49:10.477888Z"
                    },
                    "event": {
                      "type": "string",
                      "description": "Webhook event.",
                      "example": "file.uploaded"
                    },
                    "target_url": {
                      "type": "string",
                      "format": "uri",
                      "description": "Where webhook data will be posted.",
                      "example": "https://example.com"
                    },
                    "project": {
                      "type": "number",
                      "format": "date-time",
                      "description": "Webhook project ID.",
                      "example": 39123
                    },
                    "is_active": {
                      "type": "boolean",
                      "example": true
                    }
                  },
                  "example": {
                    "id": 1,
                    "created": "2016-04-27T11:49:54.948615Z",
                    "updated": "2016-04-27T12:04:57.819933Z",
                    "event": "file.uploaded",
                    "target_url": "http://sometargeturl.com/hooks/receiver",
                    "project": 13,
                    "is_active": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Simple auth. on HTTP or webhooks permission or endpoint errors.",
            "content": {
              "application/json": {
                "example": {
                  "oneOf": [
                    {
                      "description": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "detail": {
                                "type": "string",
                                "example": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
                                "default": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "description": "Webhooks are not available for your subscription plan.",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "detail": {
                                "type": "string",
                                "example": "You can\"t use webhooks",
                                "default": "You can\"t use webhooks"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "description": "`target_url` is missing",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "detail": {
                                "type": "string",
                                "description": "`target_url` is missing.",
                                "default": "`target_url` is missing.",
                                "example": "`target_url` is missing."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "auth-errors": {
                    "value": {
                      "detail": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    }
                  },
                  "premission-error": {
                    "value": {
                      "detail": "You can\"t use webhooks"
                    }
                  },
                  "target-url-error": {
                    "value": {
                      "detail": "`target_url` is missing"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Incorrect authentication credentials.",
                        "Public key {public_key} not found.",
                        "Secret key not found.",
                        "Invalid signature. Please check your secret key."
                      ],
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Invalid version header `Accept` for this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Could not satisfy the request Accept header.",
                      "default": "Could not satisfy the request Accept header."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Request was throttled.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before next request.",
                "schema": {
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Request was throttled. Expected available in 10 second."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/<id>/": {
      "put": {
        "summary": "Update webhook",
        "description": "Update webhook attributes.",
        "tags": [
          "Webhook"
        ],
        "operationId": "updateWebhook",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "number",
              "example": 143
            },
            "description": "Webhook ID.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook attributes successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Webhook.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "Webhook ID.",
                      "example": 1234
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Webhook creation date-time.",
                      "example": "2018-11-26T12:49:10.477888Z"
                    },
                    "updated": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Webhook update date-time.",
                      "example": "2018-11-26T12:49:10.477888Z"
                    },
                    "event": {
                      "type": "string",
                      "description": "Webhook event.",
                      "example": "file.uploaded"
                    },
                    "target_url": {
                      "type": "string",
                      "format": "uri",
                      "description": "Where webhook data will be posted.",
                      "example": "https://example.com"
                    },
                    "project": {
                      "type": "number",
                      "format": "date-time",
                      "description": "Webhook project ID.",
                      "example": 39123
                    },
                    "is_active": {
                      "type": "boolean",
                      "example": true
                    }
                  },
                  "example": {
                    "id": 1,
                    "created": "2016-04-27T11:49:54.948615Z",
                    "updated": "2016-04-27T12:04:57.819933Z",
                    "event": "file.uploaded",
                    "target_url": "http://sometargeturl.com/hooks/receiver",
                    "project": 13,
                    "is_active": true
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Incorrect authentication credentials.",
                        "Public key {public_key} not found.",
                        "Secret key not found.",
                        "Invalid signature. Please check your secret key."
                      ],
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Webhook with ID {id} not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "Not found.",
                      "example": "Not found."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Invalid version header `Accept` for this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Could not satisfy the request Accept header.",
                      "default": "Could not satisfy the request Accept header."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Request was throttled.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before next request.",
                "schema": {
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Request was throttled. Expected available in 10 second."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/unsubscribe/": {
      "delete": {
        "summary": "Delete webhook",
        "description": "Unsubscribe and delete webhook.",
        "tags": [
          "Webhook"
        ],
        "operationId": "webhookUnsubscribe",
        "parameters": [
          {
            "in": "header",
            "name": "accept",
            "schema": {
              "description": "Version header.",
              "example": "application/vnd.uploadcare-v0.6+json"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "target_url"
                ],
                "type": "object",
                "properties": {
                  "target_url": {
                    "type": "string",
                    "format": "uri",
                    "example": "http://sometargeturl.com/hooks/receiver"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Webhook successfully deleted."
          },
          "400": {
            "description": "Simple auth. on HTTP or webhooks permission or endpoint errors.",
            "content": {
              "application/json": {
                "example": {
                  "oneOf": [
                    {
                      "description": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "detail": {
                                "type": "string",
                                "example": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead.",
                                "default": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "description": "Webhooks are not available for your subscription plan.",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "detail": {
                                "type": "string",
                                "example": "You can\"t use webhooks",
                                "default": "You can\"t use webhooks"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "description": "`target_url` is missing",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "detail": {
                                "type": "string",
                                "description": "`target_url` is missing.",
                                "default": "`target_url` is missing.",
                                "example": "`target_url` is missing."
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "auth-errors": {
                    "value": {
                      "detail": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    }
                  },
                  "premission-error": {
                    "value": {
                      "detail": "You can\"t use webhooks"
                    }
                  },
                  "target-url-error": {
                    "value": {
                      "detail": "`target_url` is missing"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Incorrect authentication credentials.",
                        "Public key {public_key} not found.",
                        "Secret key not found.",
                        "Invalid signature. Please check your secret key."
                      ],
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Invalid version header `Accept` for this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Could not satisfy the request Accept header.",
                      "default": "Could not satisfy the request Accept header."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Request was throttled.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before next request.",
                "schema": {
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Request was throttled. Expected available in 10 second."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/convert/document/": {
      "post": {
        "tags": [
          "Conversion"
        ],
        "summary": "Convert document",
        "description": "Uploadcare allows converting documents to the following target formats: DOC, DOCX, XLS, XLSX, ODT, ODS, RTF, TXT, PDF, JPG, PNG.",
        "operationId": "documentConvert",
        "parameters": [
          {
            "in": "header",
            "name": "accept",
            "schema": {
              "description": "Version header.",
              "example": "application/vnd.uploadcare-v0.6+json"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paths": {
                    "description": "An array of UUIDs of your source documents to convert together with the specified target format (see [documentation](https://uploadcare.com/docs/document_conversion/#convert-url-formatting)).",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "https://cdn.uploadcare.com/5ffa2545-ea40-4e71-a9e4-3a8e49b7b737/document/-/format/jpg/-/page/1/",
                      "88a51210-bd69-4411-bc72-a9952d9512cd/document/-/format/pdf/",
                      "8ddbbb48-0927-4df7-afac-c6031668b01b"
                    ]
                  },
                  "store": {
                    "type": "string",
                    "description": "A flag indicating if we should store your outputs.",
                    "enum": [
                      "0",
                      "false",
                      "1",
                      "true"
                    ],
                    "example": "1"
                  }
                },
                "example": {
                  "paths": [
                    "https://cdn.uploadcare.com/5ffa2545-ea40-4e71-a9e4-3a8e49b7b737/document/-/format/jpg/-/page/1/",
                    "88a51210-bd69-4411-bc72-a9952d9512cd/document/-/format/pdf/",
                    "8ddbbb48-0927-4df7-afac-c6031668b01b"
                  ],
                  "store": 1
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "problems": {
                      "type": "object",
                      "description": "Dictionary of problems related to your processing job, if any. Key is the `path` you requested.",
                      "additionalProperties": {
                        "type": "string",
                        "format": "uuid"
                      }
                    },
                    "result": {
                      "type": "array",
                      "description": "Result for each requested path, in case of no errors for that path.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "original_source": {
                            "type": "string",
                            "description": "Source file identifier including a target format, if present."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "A UUID of your converted document.",
                            "format": "uuid"
                          },
                          "token": {
                            "type": "integer",
                            "description": "A conversion job token that can be used to get a job status."
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "problems": [
                      {
                        "8ddbbb48-0927-4df7-afac-c6031668b01b": "Bad path \"8ddbbb48-0927-4df7-afac-c6031668b01b\". Use :uuid/document/"
                      }
                    ],
                    "result": [
                      {
                        "original_source": "https://cdn.uploadcare.com/5ffa2545-ea40-4e71-a9e4-3a8e49b7b737/document/-/format/jpg/-/page/1/",
                        "token": 445630631,
                        "uuid": "d52d7136-a2e5-4338-9f45-affbf83b857d"
                      },
                      {
                        "original_source": "88a51210-bd69-4411-bc72-a9952d9512cd/document/-/format/pdf/",
                        "token": 445630637,
                        "uuid": "28843a09-dd3d-4b8a-ad4f-8aa5f8f60ff2"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Simple auth. on HTTP or document conversion permission errors.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    },
                    {
                      "description": "Document conversion feature is not available for this project."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "detail": {
                          "type": "string",
                          "default": "“paths” parameter is required."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "auth-errors": {
                    "value": {
                      "detail": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    }
                  },
                  "premission-error": {
                    "value": {
                      "detail": "Document conversion feature is not available for this project."
                    }
                  },
                  "path-error": {
                    "value": {
                      "detail": "“paths” parameter is required."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Incorrect authentication credentials.",
                        "Public key {public_key} not found.",
                        "Secret key not found.",
                        "Invalid signature. Please check your secret key."
                      ],
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Invalid version header `Accept` for this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Could not satisfy the request Accept header.",
                      "default": "Could not satisfy the request Accept header."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/convert/document/status/{token}/": {
      "get": {
        "tags": [
          "Conversion"
        ],
        "summary": "Document conversion job status",
        "description": "Once you get a conversion job result, you can acquire a conversion job status via token. Just put it in your request URL as `:token`.",
        "parameters": [
          {
            "name": "token",
            "description": "Job token.",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "example": 426339926
          },
          {
            "in": "header",
            "name": "accept",
            "schema": {
              "description": "Version header.",
              "example": "application/vnd.uploadcare-v0.6+json"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Conversion job status, can have one of the following values: - `pending` —  a source file is being prepared for conversion. - `processing` —  conversion is in progress. - `finished` — the conversion is finished. - `failed` — we failed to convert the source, see `error` for details. - `canceled` — the conversion was canceled.",
                      "enum": [
                        "pending",
                        "processing",
                        "finished",
                        "failed",
                        "cancelled"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "nullable": true,
                      "description": "Holds a conversion error if we were unable to handle your file."
                    },
                    "result": {
                      "type": "object",
                      "description": "Repeats the contents of your processing output.",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "A UUID of a converted target file."
                        }
                      }
                    }
                  },
                  "example": {
                    "status": "processing",
                    "error": null,
                    "result": {
                      "uuid": "500196bc-9da5-4aaf-8f3e-70a4ce86edae"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Simple auth. on HTTP or document conversion permission errors.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    },
                    {
                      "description": "Document conversion feature is not available for this project."
                    }
                  ]
                },
                "examples": {
                  "auth-errors": {
                    "value": {
                      "detail": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    }
                  },
                  "premission-error": {
                    "value": {
                      "detail": "Document conversion feature is not available for this project."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Incorrect authentication credentials.",
                        "Public key {public_key} not found.",
                        "Secret key not found.",
                        "Invalid signature. Please check your secret key."
                      ],
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Job with specified ID is not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found.",
                      "default": "Not found."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Invalid version header `Accept` for this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Could not satisfy the request Accept header.",
                      "default": "Could not satisfy the request Accept header."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Request was throttled.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before next request.",
                "schema": {
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Request was throttled. Expected available in 10 second."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Conversion service error.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/convert/video/": {
      "post": {
        "tags": [
          "Conversion"
        ],
        "summary": "Convert video",
        "description": "Uploadcare Video Processing optimizes your video content delivery. It is not just about using CDN nodes that suit your user locations, bandwidths, etc. You can adjust video quality, format, and size.",
        "operationId": "videoConvert",
        "parameters": [
          {
            "in": "header",
            "name": "accept",
            "schema": {
              "description": "Version header.",
              "example": "application/vnd.uploadcare-v0.6+json"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paths": {
                    "description": "An array of UUIDs of your video files to process together with a set of needed operations (see [documentation](https://uploadcare.com/docs/video_encoding/#process-operations)).",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "https://cdn.uploadcare.com/5ffa2545-ea40-4e71-a9e4-3a8e49b7b737/video/-/format/webm/",
                      "88a51210-bd69-4411-bc72-a9952d9512cd/video/-/format/ogg/-/quality/best/",
                      "8ddbbb48-0927-4df7-afac-c6031668b01b/video/"
                    ]
                  },
                  "store": {
                    "type": "string",
                    "description": "A flag indicating if we should store your outputs.",
                    "enum": [
                      "0",
                      "false",
                      "1",
                      "true"
                    ],
                    "example": "1"
                  }
                },
                "example": {
                  "paths": [
                    "d52d7136-a2e5-4338-9f45-affbf83b857d/video/",
                    "d52d7136-a2e5-4338-9f45-affbf83b857d/video/-/format/ogg/-/quality/best/",
                    "28843a09-dd3d-4b8a-ad4f-8aa5f8f60ff2"
                  ],
                  "store": 1
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "problems": {
                      "type": "object",
                      "description": "Dictionary of problems related to your processing job, if any. Key is the `path` you requested.",
                      "additionalProperties": {
                        "type": "string",
                        "format": "uuid"
                      }
                    },
                    "result": {
                      "type": "array",
                      "description": "Result for each requested path, in case of no errors for that path.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "original_source": {
                            "type": "string",
                            "description": "Input file identifier including operations, if present."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "A UUID of your processed video file.",
                            "format": "uuid"
                          },
                          "token": {
                            "type": "integer",
                            "description": "A processing job token that can be used to get a job status."
                          },
                          "thumbnails_group_uuid": {
                            "description": "UUID of a file group with thumbnails for an output video, based on the `thumbs` operation parameters.",
                            "type": "string",
                            "format": "uuid"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "problems": [
                      {
                        "13cd56e2-f6d7-4c66-ab1b-ffd13cd6646d": "Bad path \"13cd56e2-f6d7-4c66-ab1b-ffd13cd6646d\". Use :uuid/video/"
                      }
                    ],
                    "result": [
                      {
                        "original_source": "d52d7136-a2e5-4338-9f45-affbf83b857d/video/-/format/ogg/-/quality/best/",
                        "token": 445630631,
                        "thumbnails_group_uuid": "575ed4e8-f4e8-4c14-a58b-1527b6d9ee46~1",
                        "uuid": "d52d7136-a2e5-4338-9f45-affbf83b857d"
                      },
                      {
                        "original_source": "500196bc-9da5-4aaf-8f3e-70a4ce86edae/video/",
                        "token": 445630637,
                        "thumbnails_group_uuid": "be3b4d5e-179d-460e-8a5d-69112ac86cbb~1",
                        "uuid": "28843a09-dd3d-4b8a-ad4f-8aa5f8f60ff2"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Simple auth. on HTTP or video conversion permission errors.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    },
                    {
                      "description": "Video conversion feature is not available for this project."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "detail": {
                          "type": "string",
                          "default": "“paths” parameter is required."
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "auth-errors": {
                    "value": {
                      "detail": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    }
                  },
                  "premission-error": {
                    "value": {
                      "detail": "Video conversion feature is not available for this project."
                    }
                  },
                  "path-error": {
                    "value": {
                      "detail": "“paths” parameter is required."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Incorrect authentication credentials.",
                        "Public key {public_key} not found.",
                        "Secret key not found.",
                        "Invalid signature. Please check your secret key."
                      ],
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Invalid version header `Accept` for this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Could not satisfy the request Accept header.",
                      "default": "Could not satisfy the request Accept header."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/convert/video/status/{token}/": {
      "get": {
        "tags": [
          "Conversion"
        ],
        "summary": "Video conversion job status",
        "description": "Once you get a processing job result, you can acquire a processing job status via token. Just put it in your request URL as `:token`.",
        "operationId": "videoConvertStatus",
        "parameters": [
          {
            "name": "token",
            "description": "Job token.",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "example": 426339926
          },
          {
            "in": "header",
            "name": "accept",
            "schema": {
              "description": "Version header.",
              "example": "application/vnd.uploadcare-v0.6+json"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Processing job status, can have one of the following values: - `pending` — video file is being prepared for conversion. - `processing` — video file processing is in progress. - `finished` — the processing is finished. - `failed` — we failed to process the video, see `error` for details. - `canceled` — video processing was canceled.",
                      "enum": [
                        "pending",
                        "processing",
                        "finished",
                        "failed",
                        "cancelled"
                      ]
                    },
                    "error": {
                      "type": "string",
                      "nullable": true,
                      "description": "Holds a processing error if we failed to handle your video."
                    },
                    "result": {
                      "type": "object",
                      "description": "Repeats the contents of your processing output.",
                      "properties": {
                        "uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "A UUID of your processed video file."
                        },
                        "thumbnails_group_uuid": {
                          "type": "string",
                          "format": "uuid",
                          "description": "A UUID of a file group with thumbnails for an output video, based on the `thumbs` operation parameters."
                        }
                      }
                    }
                  },
                  "example": {
                    "status": "processing",
                    "error": null,
                    "result": {
                      "thumbnails_group_uuid": "575ed4e8-f4e8-4c14-a58b-1527b6d9ee46~1",
                      "uuid": "500196bc-9da5-4aaf-8f3e-70a4ce86edae"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Simple auth. on HTTP or video conversion permission errors.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    },
                    {
                      "description": "Video conversion feature is not available for this project."
                    }
                  ]
                },
                "examples": {
                  "auth-errors": {
                    "value": {
                      "detail": "Simple authentication over HTTP is forbidden. Please, use HTTPS or signed requests instead."
                    }
                  },
                  "premission-error": {
                    "value": {
                      "detail": "Video conversion feature is not available for this project."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "enum": [
                        "Incorrect authentication credentials.",
                        "Public key {public_key} not found.",
                        "Secret key not found.",
                        "Invalid signature. Please check your secret key."
                      ],
                      "example": "Incorrect authentication credentials."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Job with specified ID is not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Not found.",
                      "default": "Not found."
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Invalid version header `Accept` for this endpoint.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Could not satisfy the request Accept header.",
                      "default": "Could not satisfy the request Accept header."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Request was throttled.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before next request.",
                "schema": {
                  "type": "number"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Request was throttled. Expected available in 10 second."
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Conversion service error.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Every request made to `https://api.uploadcare.com/` MUST be signed.\n\nTo authenticate, requests MUST contain the `Authorization` header defining `auth-scheme` and `auth-param`:\n\n``` Authorization: auth-scheme auth-param ```\n\nThere are two available authorization schemes:\n* `Uploadcare.Simple`, a simple scheme where your [Secret API Key](https://uploadcare.com/docs/account/?utm_source=api-ref&utm_campaign=rest-auth#keys-secret) MUST be specified in every request's `auth-param`. Learn more in our [docs](https://uploadcare.com/docs/api_reference/rest/requests_auth/?utm_source=api-ref&utm_campaign=rest-auth#auth-simple).\n* `Uploadcare`, a more sophisticated scheme where a `signature`, not your Secret API Key MUST be specified. Signatures are then generated on your backend. Learn more in our [docs](https://uploadcare.com/docs/api_reference/rest/requests_auth/?utm_source=api-ref&utm_campaign=rest-auth#auth-uploadcare).\n\nEvery request SHOULD contain the `Accept` header identifying the REST API version:\n\n``` Accept: application/vnd.uploadcare-v0.6+json ```\n\nIf the `Accept` header is not present, a default API version is used: [v0.5](/api-refs/rest-api/v0.5/).\n\nEvery request MUST contain the `Date` header and the date MUST NOT exceed the 15-minute offset from the server time of the API endpoint. Learn more in our [docs](https://uploadcare.com/docs/api_reference/rest/requests_auth/?utm_source=api-ref&utm_campaign=rest-auth#auth-uploadcare)"
      }
    }
  }
}
